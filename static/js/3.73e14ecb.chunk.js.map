{"version":3,"sources":["../../src/components/MessageBar/MessageBar.types.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../../src/components/Button/DefaultButton/DefaultButton.styles.ts","../../src/components/Button/ButtonThemes.ts","../../src/components/Button/DefaultButton/DefaultButton.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../../src/utils/isCheckBoxInput.ts","../../src/utils/isNullOrUndefined.ts","../../src/utils/isObject.ts","../../src/logic/getNodeParentName.ts","../../src/logic/isNameInFieldArray.ts","../../src/utils/compact.ts","../../src/utils/isUndefined.ts","../../src/utils/get.ts","../../src/constants.ts","../../src/utils/omit.ts","../../src/useFormContext.tsx","../../src/logic/getProxyFormState.ts","../../src/utils/isEmptyObject.ts","../../src/logic/shouldRenderFormState.ts","../../src/utils/convertToArrayPayload.ts","../../src/utils/isWeb.ts","../../src/utils/isProxyEnabled.ts","../../src/useController.ts","../../src/useFormState.ts","../../src/logic/getControllerValue.ts","../../src/controller.tsx","../../src/logic/appendErrors.ts","../../src/utils/isKey.ts","../../src/utils/stringToPath.ts","../../src/utils/set.ts","../../src/logic/focusFieldBy.ts","../../src/logic/getFieldsValues.ts","../../src/utils/isPrimitive.ts","../../src/utils/deepEqual.ts","../../src/utils/deepMerge.ts","../../src/logic/setFieldArrayDirtyFields.ts","../../src/utils/remove.ts","../../src/utils/isBoolean.ts","../../src/utils/unset.ts","../../src/utils/isFileInput.ts","../../src/utils/isMultipleSelect.ts","../../src/utils/isRadioInput.ts","../../src/logic/getCheckboxValue.ts","../../src/logic/getFieldValueAs.ts","../../src/logic/getRadioValue.ts","../../src/logic/getFieldValue.ts","../../src/logic/getMultipleSelectValue.ts","../../src/logic/getResolverOptions.ts","../../src/logic/hasValidation.ts","../../src/logic/skipValidation.ts","../../src/utils/isFunction.ts","../../src/utils/isString.ts","../../src/utils/isMessage.ts","../../src/utils/isRegex.ts","../../src/logic/getValidateError.ts","../../src/logic/getValueAndMessage.ts","../../src/logic/validateField.ts","../../src/utils/getValidationModes.ts","../../src/utils/isHTMLElement.ts","../../src/utils/isRadioOrCheckbox.ts","../../src/utils/Subject.ts","../../src/useForm.ts","../../src/components/Button/PrimaryButton/PrimaryButton.tsx","../../src/DelayedRender.tsx","../../src/components/Label/Label.base.tsx","../../src/components/Label/Label.tsx","../../src/components/Label/Label.styles.ts","../../src/components/TextField/TextField.base.tsx","../../src/ie11Detector.ts","../../src/controlled.ts","../../src/components/TextField/TextField.styles.tsx","../../src/components/TextField/TextField.ts","../../src/components/Button/IconButton/IconButton.styles.ts","../../src/components/Button/IconButton/IconButton.tsx","../../src/components/MessageBar/MessageBar.base.tsx","../../src/useBoolean.ts","../../src/useId.ts","../../src/components/MessageBar/MessageBar.styles.ts","../../src/components/MessageBar/MessageBar.tsx"],"names":["MessageBarType","module","exports","runtime","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","getStyles","memoize","theme","customStyles","primary","baseButtonStyles","splitButtonStyles","defaultButtonStyles","root","minWidth","height","label","fontWeight","semibold","p","s","backgroundColor","primaryButtonBackground","border","color","primaryButtonText","selectors","borderColor","outlineColor","white","rootHovered","primaryButtonBackgroundHovered","primaryButtonTextHovered","rootPressed","primaryButtonBackgroundPressed","primaryButtonTextPressed","rootExpanded","rootChecked","rootCheckedHovered","rootDisabled","primaryButtonTextDisabled","primaryButtonBackgroundDisabled","splitButtonContainer","splitButtonDivider","position","width","right","top","bottom","splitButtonMenuButton","splitButtonMenuButtonDisabled","splitButtonMenuButtonChecked","splitButtonMenuButtonExpanded","splitButtonMenuIcon","splitButtonMenuIconDisabled","neutralTertiary","primaryStyles","buttonBackground","buttonBackgroundPressed","buttonBackgroundHovered","buttonBackgroundDisabled","buttonText","buttonTextHovered","buttonTextDisabled","buttonTextChecked","buttonTextCheckedHovered","neutralLight","neutralTertiaryAlt","splitButtonDividerDisabled","palette","neutralQuaternaryAlt","standardStyles","render","props","styles","BaseButton","variantClassName","onRenderDescription","DefaultButton","customizable","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","element","isObjectType","isNullOrUndefined","Array","isArray","Date","substring","search","names","some","current","getNodeParentName","filter","Boolean","val","path","defaultValue","isObject","compact","split","reduce","isUndefined","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","source","copy","FormContext","isProxyEnabled","formState","readFormStateRef","localReadFormStateRef","isRoot","Proxy","get","prop","formStateData","omit","isEmptyObject","find","window","HTMLElement","document","isWeb","useController","rules","control","shouldUnregister","methods","defaultValuesRef","register","fieldsRef","unregister","namesRef","subjectsRef","shouldUnmount","inFieldArrayActionRef","isFieldArray","array","field","_f","setInputStateValue","onChange","onBlur","ref","formStateRef","nameRef","updateFormState","readFormState","isDirty","dirtyFields","touchedFields","isValidating","isValid","errors","formStateSubscription","subscribe","convertToArrayPayload","includes","shouldRenderFormState","unsubscribe","getProxyFormState","useFormState","controllerSubscription","data","shouldUnmountField","mount","event","target","isCheckBoxInput","checked","getControllerValue","elm","focus","fieldState","invalid","isTouched","Controller","validateAllFieldCriteria","message","types","test","input","replace","set","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","focusFieldBy","fields","callback","fieldsNames","refs","getFieldsValues","output","disabled","every","deepEqual","object1","object2","isErrorObject","isPrimitive","keys1","keys2","val1","val2","deepMerge","targetValue","sourceValue","setDirtyFields","defaultValues","parentNode","parentName","unset","previousObjRef","updatePath","childObject","baseGet","k","objectRef","currentPaths","currentPathsLength","item","isBoolean","defaultResult","validResult","options","option","map","attributes","valueAsNumber","valueAsDate","setValueAs","NaN","defaultReturn","previous","getFieldValue","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","selected","isCheckBox","getCheckboxValue","getFieldValueAs","fieldsRefs","criteriaMode","shouldUseNativeValidation","mounted","required","min","max","maxLength","minLength","pattern","validate","isOnBlur","isOnChange","isOnTouch","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","isString","RegExp","getValidateError","validationData","isRegex","a","inputValue","inputRef","setCustomValidty","reportValidity","setCustomValidity","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","maxOutput","minOutput","valueDate","exceedMin","valueNumber","parseFloat","maxLengthOutput","minLengthOutput","patternValue","match","isFunction","validateError","validationResult","mode","isOnSubmit","tearDowns","tearDown","teardown","observer","subscription","closed","add","observers","subscriber","isWindowUndefined","useForm","reValidateMode","resolver","shouldFocusError","submitCount","isSubmitting","isSubmitSuccessful","resolverRef","fieldArrayDefaultValuesRef","contextRef","isMountedRef","watch","Set","unMount","watchAll","validationMode","getValidationModes","isValidateAllFieldCriteria","isFieldWatched","has","shouldRenderBaseOnError","shouldSkipRender","inputState","isValidFromResolver","isWatched","previousError","validateForm","updatedFormState","setFieldValue","rawValue","shouldRender","shouldRegister","isHTMLElement","radioRef","selectRef","checkboxRef","shouldDirty","shouldTouch","updateTouchAndDirtyState","shouldValidate","trigger","getIsDirty","formValues","isCurrentTouched","isChanged","previousIsDirty","isPreviousFieldDirty","isCurrentFieldDirty","isPreviousFieldTouched","executeInlineValidation","skipReRender","validateField","executeResolverValidation","shouldCheckValid","valid","fieldError","fieldNames","schemaResult","all","fieldName","shouldFocus","updateIsValid","updateIsValidAndInputValue","isValueUndefined","defaultChecked","setInternalValues","entries","inputKey","setValue","isReset","setFieldArrayDirtyFields","getValues","handleChange","inputType","shouldSkipValidation","hasValidation","skipValidation","parentNodeName","currentError","clearErrors","inputName","setError","watchInternal","isGlobal","isArrayNames","fieldValues","delete","keepError","keepValue","keepDirty","keepTouched","keepDefaultValue","keepIsValid","registerFieldRef","isRadioOrCheckboxFunction","contains","handleSubmit","onValid","onInvalid","e","preventDefault","persist","hasNoPromiseError","registerAbsentFields","keepStateOptions","updatedValues","keepValues","closest","keepDefaultValues","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","useFieldArraySubscription","isLiveInDom","PrimaryButton","isRendered","componentDidMount","delay","_timeoutId","setTimeout","setState","componentWillUnmount","clearTimeout","only","children","defaultProps","getClassNames","classNamesFunction","cacheSize","as","RootType","className","classNames","Label","styled","semanticColors","labelFontWeight","labelColor","bodyText","labelDisabledColor","disabledBodyText","labelRequiredStarColor","errorText","fonts","medium","boxSizing","boxShadow","margin","display","padding","wordWrap","overflowWrap","content","paddingRight","scope","__browserNeedsRevealButton","COMPONENT_NAME","_textElement","_onFocus","ev","onFocus","isFocused","validateOnFocusIn","_validate","_onBlur","validateOnFocusOut","_onRenderLabel","labelStyles","_classNames","subComponentStyles","htmlFor","_id","id","_labelId","_onRenderDescription","description","_onRevealButtonClick","prevState","isRevealingPassword","_onInputChange","previousValue","_getValue","_lastChangeValue","_isControlled","uncontrolledValue","initializeComponentRef","_async","Async","_fallbackId","getId","_descriptionId","_warnControlledUsage","String","errorMessage","_delayedValidate","debounce","deferredValidationTime","_lastValidation","_adjustInputHeight","validateOnLoad","dispose","getSnapshotBeforeUpdate","prevProps","selection","selectionStart","selectionEnd","componentDidUpdate","snapshot","start","end","multiline","setSelectionRange","prevValue","_shouldValidateAllChanges","borderless","iconProps","inputClassName","underlined","prefix","resizable","suffix","autoAdjustHeight","canRevealPassword","revealPasswordAriaLabel","onRenderPrefix","_onRenderPrefix","onRenderSuffix","_onRenderSuffix","onRenderLabel","_errorMessage","hasRevealButton","win","getWindow","navigator","isEdge","userAgent","indexOf","_browserNeedsRevealButton","focused","hasLabel","hasErrorMessage","hasIcon","elementRef","wrapper","fieldGroup","_renderTextArea","_renderInput","Icon","icon","revealButton","onClick","revealSpan","revealIcon","iconName","_isDescriptionAvailable","role","DelayedRender","_renderErrorMessage","blur","select","setSelectionStart","setSelectionEnd","_hasWarnedNullValue","warn","valueProp","style","paddingBottom","textAreaProps","ariaLabelledBy","onInput","ariaLabel","readOnly","inputProps","_latestValidateValue","onGetErrorMessage","_notifyAfterValidate","onNotifyValidationResult","textField","scrollHeight","globalClassNames","unresizable","active","getLabelStyles","fontSize","marginRight","paddingLeft","lineHeight","TextField","effects","fieldPrefixSuffix","background","disabledBackground","disabledText","inputPlaceholderText","alignItems","whiteSpace","flexShrink","placeholderStyles","opacity","disabledPlaceholderStyles","borderBottom","inputBorder","borderBottomColor","inputBorderHovered","inputFocusBorderAlt","borderRadius","roundedCorner2","inputBackground","cursor","flexDirection","minHeight","flex","textAlign","inputText","textOverflow","outline","resize","flexGrow","paddingTop","overflow","pointerEvents","bodySubtext","xSmall","slideDownIn20","small","link","iconButtonStyles","themeDarkAlt","neutralLighter","rootHasMenu","themeDark","onRenderText","IconButton","ICON_MAP","warning","blocked","severeWarning","success","messageBarType","MessageBarBase","initialState","setTrue","useConst","setFalse","toggle","currentValue","useBoolean","expandSingleLine","toggleExpandSingleLine","labelId","providedId","useId","actions","overflowButtonAriaLabel","dismissIconProps","onDismiss","isMultiline","truncated","dismissButtonAriaLabel","messageBarIconProps","delayedRender","nativeProps","expandIconProps","regionProps","actionsDiv","dismissButton","dismissal","title","iconContainer","css","text","innerText","expand","dismissSingleLine","GlobalClassNames","singleline","dismissalSingleLine","expandingSingleLine","actionsSingleline","highContrastBackgroundColor","iconColor","MessageBar","SmallScreenSelector","dismissalAndExpandIconStyle","messageText","dismissalAndExpandStyle","inset","highContrastStyle","outlineOffset","wordBreak","messageLink","messageLinkHovered","flexBasis","marginLeft","marginBottom"],"mappings":"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","file":"static/js/3.73e14ecb.chunk.js","sourcesContent":["import * as React from 'react';\nimport { BaseButton, Button } from '../../Button';\nimport { ITheme, IStyle } from '../../Styling';\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\nimport { IIconProps } from '../../Icon';\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBar {}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarProps extends React.HTMLAttributes<HTMLElement>, React.RefAttributes<HTMLDivElement> {\n  /**\n   * Optional callback to access the IMessageBar interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IMessageBar>;\n\n  /**\n   * The type of MessageBar to render.\n   * @defaultvalue MessageBarType.info\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * The actions you want to show on the other side.\n   */\n  actions?: JSX.Element;\n\n  /**\n   * A description of the message bar for the benefit of screen readers.\n   * @deprecated Use native prop `aria-label` instead.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Whether the message bar has a dismiss button and its callback.\n   * If null, we don't show a dismiss button.\n   * @defaultvalue null\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  onDismiss?: (ev?: React.MouseEvent<HTMLElement | BaseButton | Button>) => any;\n\n  /**\n   * Determines if the message bar is multi lined.\n   * If false, and the text overflows over buttons or to another line, it is clipped.\n   * @defaultvalue true\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Aria label on dismiss button if onDismiss is defined.\n   */\n  dismissButtonAriaLabel?: string;\n\n  /**\n   * Determines if the message bar text is truncated.\n   * If true, a button will render to toggle between a single line view and multiline view.\n   * This prop is for single line message bars with no buttons only in a limited space scenario.\n   * @defaultvalue false\n   */\n  truncated?: boolean;\n\n  /**\n   * Aria label on overflow button if truncated is defined.\n   */\n  overflowButtonAriaLabel?: string;\n\n  /**\n   * Additional CSS class(es) to apply to the MessageBar.\n   */\n  className?: string;\n\n  /**\n   * Theme (provided through customization.)\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IMessageBarStyleProps, IMessageBarStyles>;\n\n  /**\n   * Custom icon prop to replace the dismiss icon.\n   * If unset, default will be the Fabric Clear icon.\n   */\n  dismissIconProps?: IIconProps;\n\n  /**\n   * Custom icon prop to replace the message bar icon.\n   * If unset, default will be the icon set by messageBarType.\n   */\n  messageBarIconProps?: IIconProps;\n\n  /**\n   * Custom role to apply to the MessageBar.\n   * @defaultvalue `alert` if `messageBarType` is `error`, `blocked`, or `severeWarning`;\n   * or `status` otherwise\n   */\n  role?: 'alert' | 'status' | 'none';\n\n  /**\n   * By default, MessageBar delay-renders its content within an internal live region to help ensure\n   * it's announced by screen readers. You can disable that behavior by setting this prop to `false`.\n   *\n   * If you set this prop to `false`, to ensure proper announcement you should either:\n   * - If appropriate, ensure that the `role` prop is set to `alert` (this will be done by default\n   *   if `messageBarType` is `error`, `blocked`, or `severeWarning`), OR\n   * - Set the `role` prop to `none` (to avoid nested `status` regions), wrap the whole MessageBar\n   *   in a `<div role=\"status\">` which is always rendered, and ensure that the MessageBar is\n   *   rendered either conditionally or with a delay.\n   * @default true\n   */\n  delayedRender?: boolean;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyleProps {\n  /**\n   * Theme (provided through customization).\n   */\n  theme: ITheme;\n\n  /**\n   * Additional CSS class(es).\n   */\n  className?: string;\n\n  /**\n   * Type of the MessageBar.\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * Whether the MessageBar contains a dismiss button.\n   */\n  onDismiss?: boolean;\n\n  /**\n   * Whether the text is truncated.\n   */\n  truncated?: boolean;\n\n  /**\n   * Whether the MessageBar is rendered in multi line (as opposed to single line) mode.\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Whether the single line MessageBar is being expanded.\n   */\n  expandSingleLine?: boolean;\n\n  /**\n   * Whether the MessageBar contains any action elements.\n   */\n  actions?: boolean;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyles {\n  /**\n   * Style set for the root element.\n   */\n  root?: IStyle;\n\n  /**\n   * Style set for the element containing the icon, text, and optional dismiss button.\n   */\n  content?: IStyle;\n\n  /**\n   * Style set for the element containing the icon.\n   */\n  iconContainer?: IStyle;\n\n  /**\n   * Style set for the icon.\n   */\n  icon?: IStyle;\n\n  /**\n   * Style set for the element containing the text.\n   */\n  text?: IStyle;\n\n  /**\n   * Style set for the text.\n   */\n  innerText?: IStyle;\n\n  /**\n   * Style set for the optional dismiss button.\n   */\n  dismissal?: IStyle;\n\n  /**\n   * Style set for the icon used to expand and collapse the MessageBar.\n   */\n  expand?: IStyle;\n\n  /**\n   * Style set for the element containing the dismiss button.\n   */\n  dismissSingleLine?: IStyle;\n\n  /**\n   * Style set for the element containing the expand icon.\n   */\n  expandSingleLine?: IStyle;\n\n  /**\n   * Style set for the optional element containing the action elements.\n   */\n  actions?: IStyle;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport enum MessageBarType {\n  /** Info styled MessageBar */\n  info = 0,\n  /** Error styled MessageBar */\n  error = 1,\n  /** Blocked styled MessageBar */\n  blocked = 2,\n  /** SevereWarning styled MessageBar */\n  severeWarning = 3,\n  /** Success styled MessageBar */\n  success = 4,\n  /** Warning styled MessageBar */\n  warning = 5,\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { IButtonStyles } from '../Button.types';\nimport { ITheme, concatStyleSets, FontWeights } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\n\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\n\nconst DEFAULT_BUTTON_HEIGHT = '32px';\nconst DEFAULT_BUTTON_MIN_WIDTH = '80px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, primary?: boolean): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const defaultButtonStyles: IButtonStyles = {\n      root: {\n        minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n        height: DEFAULT_BUTTON_HEIGHT,\n      },\n      label: {\n        fontWeight: FontWeights.semibold,\n      },\n    };\n\n    return concatStyleSets(\n      baseButtonStyles,\n      defaultButtonStyles,\n      primary ? primaryStyles(theme) : standardStyles(theme),\n      splitButtonStyles,\n      customStyles,\n    )!;\n  },\n);\n","import { IButtonStyles } from './Button.types';\nimport { ITheme, HighContrastSelector, IRawStyle, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nconst splitButtonDividerBaseStyles = (): IRawStyle => {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n};\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n  const buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextDisabled = s.buttonTextDisabled;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText,\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered,\n    },\n\n    rootDisabled: {\n      color: buttonTextDisabled,\n      backgroundColor: buttonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled,\n    },\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: `1px solid ${s.primaryButtonBackground}`,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              border: `none`,\n              outlineColor: p.white,\n            },\n          },\n        },\n      },\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: `1px solid ${s.primaryButtonBackgroundHovered}`,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: `1px solid ${s.primaryButtonBackgroundPressed}`,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootDisabled: {\n      color: s.primaryButtonTextDisabled,\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.white,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  };\n}\n","import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { IButtonProps } from '../Button.types';\nimport { getStyles } from './DefaultButton.styles';\n\n/**\n * {@docCategory Button}\n */\n@customizable('DefaultButton', ['theme', 'styles'], true)\nexport class DefaultButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { primary = false, styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName={primary ? 'ms-Button--primary' : 'ms-Button--default'}\n        styles={getStyles(theme!, styles, primary)}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is null | undefined => value == null;\n","import isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n","export default (name: string) => name.substring(0, name.search(/.\\d/)) || name;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  [...names].some((current) => getNodeParentName(name) === current);\n","export default (value: any[]) => value.filter(Boolean);\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T extends unknown>(\n  obj: T,\n  path: string,\n  defaultValue?: unknown,\n) => {\n  if (isObject(obj) && path) {\n    const result = compact(path.split(/[,[\\].]+?/)).reduce(\n      (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n      obj,\n    );\n\n    return isUndefined(result) || result === obj\n      ? isUndefined(obj[path as keyof T])\n        ? defaultValue\n        : obj[path as keyof T]\n      : result;\n  }\n\n  return undefined;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","export default <Key extends string, T extends Record<Key, any>>(\n  source: T,\n  key: Key,\n): Omit<T, Key> => {\n  const copy = { ...source };\n  delete copy[key];\n\n  return copy;\n};\n","import * as React from 'react';\n\nimport omit from './utils/omit';\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst FormContext = React.createContext<UseFormReturn | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(FormContext) as unknown as UseFormReturn<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>(\n  props: FormProviderProps<TFieldValues>,\n) => (\n  <FormContext.Provider\n    value={omit(props, 'children') as unknown as UseFormReturn}\n  >\n    {props.children}\n  </FormContext.Provider>\n);\n","import * as React from 'react';\n\nimport { VALIDATION_MODE } from '../constants';\nimport { FormState, FormStateProxy, ReadFormState } from '../types';\n\nexport default <TFieldValues>(\n  isProxyEnabled: boolean,\n  formState: FormState<TFieldValues>,\n  readFormStateRef: React.MutableRefObject<ReadFormState>,\n  localReadFormStateRef?: React.MutableRefObject<ReadFormState>,\n  isRoot = true,\n) =>\n  isProxyEnabled\n    ? new Proxy(formState, {\n        get: (obj, prop: keyof FormStateProxy) => {\n          if (prop in obj) {\n            if (readFormStateRef.current[prop] !== VALIDATION_MODE.all) {\n              readFormStateRef.current[prop] = isRoot\n                ? VALIDATION_MODE.all\n                : true;\n            }\n            localReadFormStateRef &&\n              (localReadFormStateRef.current[prop] = true);\n            return obj[prop];\n          }\n\n          return undefined;\n        },\n      })\n    : formState;\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport { ReadFormState } from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport omit from '../utils/omit';\n\nexport default <T extends Record<string, any>, K extends ReadFormState>(\n  formStateData: T,\n  readFormStateRef: K,\n  isRoot?: boolean,\n) => {\n  const formState = omit(formStateData, 'name');\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(readFormStateRef).length ||\n    Object.keys(formState).find(\n      (key) =>\n        readFormStateRef[key as keyof ReadFormState] ===\n        (isRoot ? VALIDATION_MODE.all : true),\n    )\n  );\n};\n","export default <T extends unknown>(value: T) =>\n  Array.isArray(value) ? value : [value];\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isWeb from './isWeb';\n\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== 'undefined';\n\nexport default isProxyEnabled;\n","import * as React from 'react';\n\nimport getControllerValue from './logic/getControllerValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport get from './utils/get';\nimport isUndefined from './utils/isUndefined';\nimport { EVENTS } from './constants';\nimport {\n  FieldPath,\n  FieldValues,\n  InternalFieldName,\n  UseControllerProps,\n  UseControllerReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\n\nexport function useController<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  name,\n  rules,\n  defaultValue,\n  control,\n  shouldUnregister,\n}: UseControllerProps<TFieldValues, TName>): UseControllerReturn<\n  TFieldValues,\n  TName\n> {\n  const methods = useFormContext<TFieldValues>();\n  const {\n    defaultValuesRef,\n    register,\n    fieldsRef,\n    unregister,\n    namesRef,\n    subjectsRef,\n    shouldUnmount,\n    inFieldArrayActionRef,\n  } = control || methods.control;\n\n  const isFieldArray = isNameInFieldArray(namesRef.current.array, name);\n  const field = get(fieldsRef.current, name);\n  const [value, setInputStateValue] = React.useState(\n    isFieldArray || !field || !field._f\n      ? isFieldArray || isUndefined(get(defaultValuesRef.current, name))\n        ? defaultValue\n        : get(defaultValuesRef.current, name)\n      : field._f.value,\n  );\n  const { onChange, onBlur, ref } = register(name, {\n    ...rules,\n    value,\n  });\n  const formState = useFormState({\n    control: control || methods.control,\n    name,\n  });\n\n  React.useEffect(() => {\n    const controllerSubscription = subjectsRef.current.control.subscribe({\n      next: (data) =>\n        (!data.name || name === data.name) &&\n        setInputStateValue(get(data.values, name)),\n    });\n\n    return () => {\n      controllerSubscription.unsubscribe();\n      const shouldUnmountField = shouldUnmount || shouldUnregister;\n\n      if (\n        isFieldArray\n          ? shouldUnmountField && !inFieldArrayActionRef.current\n          : shouldUnmountField\n      ) {\n        unregister(name);\n      } else {\n        const field = get(fieldsRef.current, name);\n\n        if (field && field._f) {\n          field._f.mount = false;\n        }\n      }\n    };\n  }, [name]);\n\n  return {\n    field: {\n      onChange: (event: any) => {\n        const value = getControllerValue(event);\n        setInputStateValue(value);\n\n        onChange({\n          target: {\n            value,\n            name: name as InternalFieldName,\n          },\n          type: EVENTS.CHANGE,\n        });\n      },\n      onBlur: () => {\n        onBlur({\n          target: {\n            name: name as InternalFieldName,\n          },\n          type: EVENTS.BLUR,\n        });\n      },\n      name,\n      value,\n      ref: (elm) =>\n        elm &&\n        ref({\n          focus: () => elm.focus && elm.focus(),\n        }),\n    },\n    formState,\n    fieldState: {\n      invalid: !!get(formState.errors, name),\n      isDirty: !!get(formState.dirtyFields, name),\n      isTouched: !!get(formState.touchedFields, name),\n      error: get(formState.errors, name),\n    },\n  };\n}\n","import * as React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport isProxyEnabled from './utils/isProxyEnabled';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\n\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const { control, name } = props || {};\n  const methods = useFormContext();\n  const { formStateRef, subjectsRef, readFormStateRef } =\n    control || methods.control;\n  const nameRef = React.useRef<InternalFieldName>(name as InternalFieldName);\n  nameRef.current = name as InternalFieldName;\n\n  const [formState, updateFormState] = React.useState(formStateRef.current);\n  const readFormState = React.useRef({\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n\n  React.useEffect(() => {\n    const formStateSubscription = subjectsRef.current.state.subscribe({\n      next: (formState) =>\n        (!nameRef.current ||\n          !formState.name ||\n          convertToArrayPayload(nameRef.current).includes(formState.name)) &&\n        shouldRenderFormState(formState, readFormState.current) &&\n        updateFormState({\n          ...formStateRef.current,\n          ...formState,\n        }),\n    });\n\n    return () => formStateSubscription.unsubscribe();\n  }, []);\n\n  return getProxyFormState<TFieldValues>(\n    isProxyEnabled,\n    formState as FormState<TFieldValues>,\n    readFormStateRef,\n    readFormState,\n    false,\n  );\n}\n\nexport { useFormState };\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","import { ControllerProps, FieldPath, FieldValues } from './types';\nimport { useController } from './useController';\n\nconst Controller = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n  props: ControllerProps<TFieldValues, TName>,\n) => props.render(useController<TFieldValues, TName>(props));\n\nexport { Controller };\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\nimport isUndefined from '../utils/isUndefined';\nimport omit from '../utils/omit';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const _f = field._f;\n      const current = omit(field, '_f');\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n          break;\n        } else if (_f.refs) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(current)) {\n        focusFieldBy(current, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","import * as React from 'react';\n\nimport { FieldRefs, FieldValues } from '../types';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport omit from '../utils/omit';\nimport set from '../utils/set';\n\nconst getFieldsValues = (\n  fieldsRef: React.MutableRefObject<FieldRefs>,\n  output: FieldValues = {},\n): any => {\n  for (const name in fieldsRef.current) {\n    const field = fieldsRef.current[name];\n\n    if (field && !isNullOrUndefined(output)) {\n      const _f = field._f;\n      const current = omit(field, '_f');\n\n      set(\n        output,\n        name,\n        _f && _f.ref\n          ? _f.ref.disabled || (_f.refs && _f.refs.every((ref) => ref.disabled))\n            ? undefined\n            : _f.value\n          : Array.isArray(field)\n          ? []\n          : {},\n      );\n\n      current &&\n        getFieldsValues(\n          {\n            current,\n          },\n          output[name],\n        );\n    }\n  }\n\n  return output;\n};\n\nexport default getFieldsValues;\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import * as React from 'react';\n\nimport isObject from '../utils/isObject';\n\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(\n  object1: any,\n  object2: any,\n  isErrorObject?: boolean,\n) {\n  if (\n    isPrimitive(object1) ||\n    isPrimitive(object2) ||\n    object1 instanceof Date ||\n    object2 instanceof Date\n  ) {\n    return object1 === object2;\n  }\n\n  if (!React.isValidElement(object1)) {\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    for (const key of keys1) {\n      const val1 = object1[key];\n\n      if (!(isErrorObject && key === 'ref')) {\n        const val2 = object2[key];\n\n        if (\n          (isObject(val1) || Array.isArray(val1)) &&\n          (isObject(val2) || Array.isArray(val2))\n            ? !deepEqual(val1, val2, isErrorObject)\n            : val1 !== val2\n        ) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n","import isObject from './isObject';\nimport isPrimitive from './isPrimitive';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>,\n>(target: T, source: U): T & U {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    try {\n      target[key] =\n        (isObject(targetValue) && isObject(sourceValue)) ||\n        (Array.isArray(targetValue) && Array.isArray(sourceValue))\n          ? deepMerge(targetValue, sourceValue)\n          : sourceValue;\n    } catch {}\n  }\n\n  return target;\n}\n","import { get } from '../utils';\nimport deepEqual from '../utils/deepEqual';\nimport { deepMerge } from '../utils/deepMerge';\nimport set from '../utils/set';\n\nfunction setDirtyFields<\n  T extends Record<string, unknown>[],\n  U extends Record<string, unknown>[],\n  K extends Record<string, boolean | []>,\n>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n  parentNode?: K,\n  parentName?: keyof K,\n) {\n  let index = -1;\n\n  while (++index < values.length) {\n    for (const key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(\n          values[index][key] as T,\n          get(defaultValues[index] || {}, key, []),\n          dirtyFields[index][key] as [],\n          dirtyFields[index],\n          key,\n        );\n      } else {\n        deepEqual(get(defaultValues[index] || {}, key), values[index][key])\n          ? set(dirtyFields[index] || {}, key)\n          : (dirtyFields[index] = {\n              ...dirtyFields[index],\n              [key]: true,\n            });\n      }\n    }\n\n    parentNode &&\n      !dirtyFields.length &&\n      delete parentNode[parentName as keyof K];\n  }\n\n  return dirtyFields;\n}\n\nexport default <T extends U, U extends Record<string, unknown>[]>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n) =>\n  deepMerge(\n    setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)),\n    setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)),\n  );\n","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\n      );\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import isBoolean from './isBoolean';\nimport isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import { Field } from '../types';\nimport isUndefined from '../utils/isUndefined';\n\nexport default (\n  value: any,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === ''\n      ? NaN\n      : +value\n    : valueAsDate\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(field?: Field) {\n  if (field && field._f) {\n    const ref = field._f.ref;\n\n    if (ref.disabled) {\n      return;\n    }\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field._f.refs).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field._f.refs).value;\n    }\n\n    return getFieldValueAs(\n      isUndefined(ref.value) ? field._f.ref.value : ref.value,\n      field._f,\n    );\n  }\n}\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  fieldsRefs: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field = get(fieldsRefs, name) as Field;\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","import { RegisterOptions } from '../types';\n\nexport default <T extends RegisterOptions>(options?: T, mounted?: boolean) =>\n  mounted &&\n  options &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isOnTouch,\n  isTouched,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n  isOnTouch?: boolean;\n  isTouched?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","export default (value: unknown): value is string => typeof value === 'string';\n","import * as React from 'react';\n\nimport { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport { Field, FieldError, InternalFieldErrors, Message } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async (\n  {\n    _f: {\n      ref,\n      refs,\n      required,\n      maxLength,\n      minLength,\n      min,\n      max,\n      pattern,\n      validate,\n      name,\n      value: inputValue,\n      valueAsNumber,\n      mount,\n    },\n  }: Field,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n): Promise<InternalFieldErrors> => {\n  if (!mount) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidty = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n      (isBoolean(inputValue) && !inputValue) ||\n      (isCheckBox && !getCheckboxValue(refs).isValid) ||\n      (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNaN(inputValue)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue);\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidty(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidty(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidty(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidty(true);\n  return error;\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","export type Observer<T> = {\n  next: (value: T) => void;\n};\n\ntype TearDown = () => void;\n\nexport type SubjectType<T> = {\n  next: (value: T) => void;\n  subscribe: (value: Observer<T>) => {\n    unsubscribe: TearDown;\n  };\n};\n\nexport class Subscription {\n  private tearDowns: TearDown[] = [];\n\n  add(tearDown: TearDown) {\n    this.tearDowns.push(tearDown);\n  }\n\n  unsubscribe() {\n    for (const teardown of this.tearDowns) {\n      teardown();\n    }\n    this.tearDowns = [];\n  }\n}\n\nclass Subscriber<T> implements Observer<T> {\n  closed = false;\n\n  constructor(private observer: Observer<T>, subscription: Subscription) {\n    subscription.add(() => (this.closed = true));\n  }\n\n  next(value: T) {\n    if (!this.closed) {\n      this.observer.next(value);\n    }\n  }\n}\n\nexport default class Subject<T> {\n  observers: Observer<T>[];\n\n  constructor() {\n    this.observers = [];\n  }\n\n  next(value: T) {\n    for (const observer of this.observers) {\n      observer.next(value);\n    }\n  }\n\n  subscribe(observer: Observer<T>) {\n    const subscription = new Subscription();\n    const subscriber = new Subscriber(observer, subscription);\n    this.observers.push(subscriber);\n\n    return subscription;\n  }\n\n  unsubscribe() {\n    this.observers = [];\n  }\n}\n","import * as React from 'react';\n\nimport focusFieldBy from './logic/focusFieldBy';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport getFieldValueAs from './logic/getFieldValueAs';\nimport getNodeParentName from './logic/getNodeParentName';\nimport getProxyFormState from './logic/getProxyFormState';\nimport getResolverOptions from './logic/getResolverOptions';\nimport hasValidation from './logic/hasValidation';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport setFieldArrayDirtyFields from './logic/setFieldArrayDirtyFields';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport skipValidation from './logic/skipValidation';\nimport validateField from './logic/validateField';\nimport compact from './utils/compact';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport deepEqual from './utils/deepEqual';\nimport get from './utils/get';\nimport getValidationModes from './utils/getValidationModes';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isFileInput from './utils/isFileInput';\nimport isFunction from './utils/isFunction';\nimport isHTMLElement from './utils/isHTMLElement';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isObject from './utils/isObject';\nimport isPrimitive from './utils/isPrimitive';\nimport isProxyEnabled from './utils/isProxyEnabled';\nimport isRadioInput from './utils/isRadioInput';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isString from './utils/isString';\nimport isUndefined from './utils/isUndefined';\nimport isWeb from './utils/isWeb';\nimport omit from './utils/omit';\nimport set from './utils/set';\nimport Subject from './utils/Subject';\nimport unset from './utils/unset';\nimport { EVENTS, VALIDATION_MODE } from './constants';\nimport {\n  ChangeHandler,\n  DeepPartial,\n  DefaultValues,\n  Field,\n  FieldArrayDefaultValues,\n  FieldError,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  PathValue,\n  ReadFormState,\n  Ref,\n  RegisterOptions,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UnpackNestedValue,\n  UseFormClearErrors,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormRegisterReturn,\n  UseFormReset,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from './types';\n\nconst isWindowUndefined = typeof window === 'undefined';\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as DefaultValues<TFieldValues>,\n  shouldFocusError = true,\n  shouldUseNativeValidation,\n  shouldUnregister,\n  criteriaMode,\n}: UseFormProps<TFieldValues, TContext> = {}): UseFormReturn<TFieldValues> {\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {},\n  });\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    touchedFields: !isProxyEnabled,\n    isValidating: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n    errors: !isProxyEnabled,\n  });\n  const resolverRef = React.useRef(resolver);\n  const formStateRef = React.useRef(formState);\n  const fieldsRef = React.useRef<FieldRefs>({});\n  const defaultValuesRef =\n    React.useRef<DefaultValues<TFieldValues>>(defaultValues);\n  const fieldArrayDefaultValuesRef = React.useRef<FieldArrayDefaultValues>({});\n  const contextRef = React.useRef(context);\n  const inFieldArrayActionRef = React.useRef(false);\n  const isMountedRef = React.useRef(false);\n  const subjectsRef: Subjects<TFieldValues> = React.useRef({\n    watch: new Subject(),\n    control: new Subject(),\n    array: new Subject(),\n    state: new Subject(),\n  });\n  const namesRef = React.useRef<Names>({\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n    watchAll: false,\n  });\n\n  const validationMode = getValidationModes(mode);\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  resolverRef.current = resolver;\n  contextRef.current = context;\n\n  const isFieldWatched = (name: FieldPath<TFieldValues>) =>\n    namesRef.current.watchAll ||\n    namesRef.current.watch.has(name) ||\n    namesRef.current.watch.has((name.match(/\\w+/) || [])[0]);\n\n  const shouldRenderBaseOnError = React.useCallback(\n    async (\n      shouldSkipRender: boolean,\n      name: InternalFieldName,\n      error?: FieldError,\n      inputState?: {\n        dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n        isDirty?: boolean;\n        touched?: FieldNamesMarkedBoolean<TFieldValues>;\n      },\n      isValidFromResolver?: boolean,\n      isWatched?: boolean,\n    ): Promise<void> => {\n      const previousError = get(formStateRef.current.errors, name);\n      const isValid = readFormStateRef.current.isValid\n        ? resolver\n          ? isValidFromResolver\n          : await validateForm(fieldsRef.current, true)\n        : false;\n\n      error\n        ? set(formStateRef.current.errors, name, error)\n        : unset(formStateRef.current.errors, name);\n\n      if (\n        (isWatched ||\n          (error ? !deepEqual(previousError, error, true) : previousError) ||\n          !isEmptyObject(inputState) ||\n          formStateRef.current.isValid !== isValid) &&\n        !shouldSkipRender\n      ) {\n        const updatedFormState = {\n          ...inputState,\n          isValid: !!isValid,\n          errors: formStateRef.current.errors,\n          name,\n        };\n\n        formStateRef.current = {\n          ...formStateRef.current,\n          ...updatedFormState,\n        };\n\n        subjectsRef.current.state.next(isWatched ? { name } : updatedFormState);\n      }\n\n      subjectsRef.current.state.next({\n        isValidating: false,\n      });\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      name: InternalFieldName,\n      rawValue: SetFieldValue<TFieldValues>,\n      options: SetValueConfig = {},\n      shouldRender?: boolean,\n      shouldRegister?: boolean,\n    ) => {\n      shouldRegister && register(name as Path<TFieldValues>);\n      const field = get(fieldsRef.current, name);\n\n      if (field) {\n        const _f = (field as Field)._f;\n\n        if (_f) {\n          const value =\n            isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(rawValue)\n              ? ''\n              : rawValue;\n          _f.value = getFieldValueAs(rawValue, _f);\n\n          if (isRadioInput(_f.ref)) {\n            (_f.refs || []).forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === value),\n            );\n          } else if (isFileInput(_f.ref) && !isString(value)) {\n            _f.ref.files = value as FileList;\n          } else if (isMultipleSelect(_f.ref)) {\n            [..._f.ref.options].forEach(\n              (selectRef) =>\n                (selectRef.selected = (value as string[]).includes(\n                  selectRef.value,\n                )),\n            );\n          } else if (isCheckBoxInput(_f.ref) && _f.refs) {\n            _f.refs.length > 1\n              ? _f.refs.forEach(\n                  (checkboxRef) =>\n                    (checkboxRef.checked = Array.isArray(value)\n                      ? !!(value as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : value === checkboxRef.value),\n                )\n              : (_f.refs[0].checked = !!value);\n          } else {\n            _f.ref.value = value;\n          }\n\n          if (shouldRender) {\n            const values = getFieldsValues(fieldsRef);\n            set(values, name, rawValue);\n            subjectsRef.current.control.next({\n              values: {\n                ...defaultValuesRef.current,\n                ...values,\n              } as DefaultValues<TFieldValues>,\n              name,\n            });\n          }\n\n          (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirtyState(name, value, options.shouldTouch);\n          options.shouldValidate && trigger(name as Path<TFieldValues>);\n        } else {\n          field._f = {\n            ref: {\n              name,\n              value: rawValue,\n            },\n            value: rawValue,\n          };\n        }\n      }\n    },\n    [],\n  );\n\n  const getIsDirty: GetIsDirty = React.useCallback((name, data) => {\n    const formValues = getFieldsValues(fieldsRef);\n\n    name && data && set(formValues, name, data);\n\n    return !deepEqual(formValues, defaultValuesRef.current);\n  }, []);\n\n  const updateTouchAndDirtyState = React.useCallback(\n    (\n      name: InternalFieldName,\n      inputValue: unknown,\n      isCurrentTouched?: boolean,\n      shouldRender = true,\n    ): Partial<\n      Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n    > => {\n      const state: Partial<FormState<TFieldValues>> & { name: string } = {\n        name,\n      };\n      let isChanged = false;\n\n      if (readFormStateRef.current.isDirty) {\n        const previousIsDirty = formStateRef.current.isDirty;\n        formStateRef.current.isDirty = getIsDirty();\n        state.isDirty = formStateRef.current.isDirty;\n        isChanged = previousIsDirty !== state.isDirty;\n      }\n\n      if (readFormStateRef.current.dirtyFields && !isCurrentTouched) {\n        const isPreviousFieldDirty = get(\n          formStateRef.current.dirtyFields,\n          name,\n        );\n        const isCurrentFieldDirty = !deepEqual(\n          get(defaultValuesRef.current, name),\n          inputValue,\n        );\n        isCurrentFieldDirty\n          ? set(formStateRef.current.dirtyFields, name, true)\n          : unset(formStateRef.current.dirtyFields, name);\n        state.dirtyFields = formStateRef.current.dirtyFields;\n        isChanged =\n          isChanged ||\n          isPreviousFieldDirty !== get(formStateRef.current.dirtyFields, name);\n      }\n\n      const isPreviousFieldTouched = get(\n        formStateRef.current.touchedFields,\n        name,\n      );\n\n      if (isCurrentTouched && !isPreviousFieldTouched) {\n        set(formStateRef.current.touchedFields, name, isCurrentTouched);\n        state.touchedFields = formStateRef.current.touchedFields;\n        isChanged =\n          isChanged ||\n          (readFormStateRef.current.touchedFields &&\n            isPreviousFieldTouched !== isCurrentTouched);\n      }\n\n      isChanged && shouldRender && subjectsRef.current.state.next(state);\n\n      return isChanged ? state : {};\n    },\n    [],\n  );\n\n  const executeInlineValidation = React.useCallback(\n    async (\n      name: InternalFieldName,\n      skipReRender: boolean,\n    ): Promise<boolean> => {\n      const error = (\n        await validateField(\n          get(fieldsRef.current, name) as Field,\n          isValidateAllFieldCriteria,\n          shouldUseNativeValidation,\n        )\n      )[name];\n\n      shouldRenderBaseOnError(skipReRender, name, error);\n\n      return isUndefined(error);\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const executeResolverValidation = React.useCallback(\n    async (names?: InternalFieldName[]) => {\n      const { errors } = await resolverRef.current!(\n        getFieldsValues(fieldsRef),\n        contextRef.current,\n        getResolverOptions(\n          namesRef.current.mount,\n          fieldsRef.current,\n          criteriaMode,\n          shouldUseNativeValidation,\n        ),\n      );\n\n      if (names) {\n        for (const name of names) {\n          const error = get(errors, name);\n          error\n            ? set(formStateRef.current.errors, name, error)\n            : unset(formStateRef.current.errors, name);\n        }\n      } else {\n        formStateRef.current.errors = errors;\n      }\n\n      return errors;\n    },\n    [criteriaMode, shouldUseNativeValidation],\n  );\n\n  const validateForm = async (\n    fieldsRef: FieldRefs,\n    shouldCheckValid?: boolean,\n    context = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fieldsRef) {\n      const field = fieldsRef[name];\n\n      if (field) {\n        const _f = field._f;\n        const current = omit(field, '_f');\n\n        if (_f) {\n          const fieldError = await validateField(\n            field,\n            isValidateAllFieldCriteria,\n            shouldUseNativeValidation,\n          );\n\n          if (shouldCheckValid) {\n            if (fieldError[_f.name]) {\n              context.valid = false;\n              break;\n            }\n          } else {\n            fieldError[_f.name]\n              ? set(formStateRef.current.errors, _f.name, fieldError[_f.name])\n              : unset(formStateRef.current.errors, _f.name);\n          }\n        }\n\n        current && (await validateForm(current, shouldCheckValid, context));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = React.useCallback(\n    async (name, options = {}) => {\n      const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n      let isValid;\n\n      subjectsRef.current.state.next({\n        isValidating: true,\n      });\n\n      if (resolver) {\n        const schemaResult = await executeResolverValidation(\n          isUndefined(name) ? name : fieldNames,\n        );\n        isValid = name\n          ? fieldNames.every((name) => !get(schemaResult, name))\n          : isEmptyObject(schemaResult);\n      } else {\n        if (name) {\n          isValid = (\n            await Promise.all(\n              fieldNames\n                .filter((fieldName) => get(fieldsRef.current, fieldName, {})._f)\n                .map(\n                  async (fieldName) =>\n                    await executeInlineValidation(fieldName, true),\n                ),\n            )\n          ).every(Boolean);\n        } else {\n          await validateForm(fieldsRef.current);\n          isValid = isEmptyObject(formStateRef.current.errors);\n        }\n      }\n\n      subjectsRef.current.state.next({\n        ...(isString(name) ? { name } : {}),\n        errors: formStateRef.current.errors,\n        isValidating: false,\n      });\n\n      if (options.shouldFocus && !isValid) {\n        focusFieldBy(\n          fieldsRef.current,\n          (key) => get(formStateRef.current.errors, key),\n          fieldNames,\n        );\n      }\n\n      readFormStateRef.current.isValid && updateIsValid();\n\n      return isValid;\n    },\n    [executeResolverValidation, executeInlineValidation],\n  );\n\n  const updateIsValidAndInputValue = (name: InternalFieldName, ref?: Ref) => {\n    const field = get(fieldsRef.current, name) as Field;\n\n    if (field) {\n      const isValueUndefined = isUndefined(field._f.value);\n      const defaultValue = isValueUndefined\n        ? get(defaultValuesRef.current, name)\n        : field._f.value;\n\n      if (!isUndefined(defaultValue)) {\n        if (ref && (ref as HTMLInputElement).defaultChecked) {\n          field._f.value = getFieldValue(field);\n        } else if (isNameInFieldArray(namesRef.current.array, name)) {\n          field._f.value = defaultValue;\n        } else {\n          setFieldValue(name, defaultValue);\n        }\n      } else if (isValueUndefined) {\n        field._f.value = getFieldValue(field);\n      }\n    }\n\n    isMountedRef.current && readFormStateRef.current.isValid && updateIsValid();\n  };\n\n  const updateIsValid = React.useCallback(\n    async (values = {}) => {\n      const isValid = resolver\n        ? isEmptyObject(\n            (\n              await resolverRef.current!(\n                {\n                  ...getFieldsValues(fieldsRef),\n                  ...values,\n                },\n                contextRef.current,\n                getResolverOptions(\n                  namesRef.current.mount,\n                  fieldsRef.current,\n                  criteriaMode,\n                  shouldUseNativeValidation,\n                ),\n              )\n            ).errors,\n          )\n        : await validateForm(fieldsRef.current, true);\n\n      isValid !== formStateRef.current.isValid &&\n        subjectsRef.current.state.next({\n          isValid,\n        });\n    },\n    [criteriaMode, shouldUseNativeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: FieldPath<TFieldValues>,\n      value: UnpackNestedValue<\n        PathValue<TFieldValues, FieldPath<TFieldValues>>\n      >,\n      options: SetValueConfig,\n    ) =>\n      Object.entries(value).forEach(([inputKey, inputValue]) => {\n        const fieldName = `${name}.${inputKey}` as Path<TFieldValues>;\n        const field = get(fieldsRef.current, fieldName);\n        const isFieldArray = namesRef.current.array.has(name);\n\n        isFieldArray || !isPrimitive(inputValue) || (field && !field._f)\n          ? setInternalValues(\n              fieldName,\n              inputValue as SetFieldValue<TFieldValues>,\n              options,\n            )\n          : setFieldValue(\n              fieldName,\n              inputValue as SetFieldValue<TFieldValues>,\n              options,\n              true,\n              !field,\n            );\n      }),\n    [trigger],\n  );\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(fieldsRef.current, name);\n    const isFieldArray = namesRef.current.array.has(name);\n\n    if (isFieldArray) {\n      subjectsRef.current.array.next({\n        values: value,\n        name,\n        isReset: true,\n      });\n\n      if (\n        (readFormStateRef.current.isDirty ||\n          readFormStateRef.current.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        set(\n          formStateRef.current.dirtyFields,\n          name,\n          setFieldArrayDirtyFields(\n            value,\n            get(defaultValuesRef.current, name, []),\n            get(formStateRef.current.dirtyFields, name, []),\n          ),\n        );\n\n        subjectsRef.current.state.next({\n          name,\n          dirtyFields: formStateRef.current.dirtyFields,\n          isDirty: getIsDirty(name, value),\n        });\n      }\n\n      !(value as []).length &&\n        set(fieldsRef.current, name, []) &&\n        set(fieldArrayDefaultValuesRef.current, name, []);\n    }\n\n    ((field && !field._f) || isFieldArray) && !isNullOrUndefined(value)\n      ? setInternalValues(name, value, isFieldArray ? {} : options)\n      : setFieldValue(name, value, options, true, !field);\n\n    isFieldWatched(name) && subjectsRef.current.state.next({});\n    subjectsRef.current.watch.next({ name, values: getValues() });\n  };\n\n  const handleChange: ChangeHandler = React.useCallback(\n    async ({ type, target, target: { value, type: inputType } }) => {\n      let name = (target as Ref)!.name;\n      let error;\n      let isValid;\n      const field = get(fieldsRef.current, name) as Field;\n\n      if (field) {\n        let inputValue = inputType ? getFieldValue(field) : undefined;\n        inputValue = isUndefined(inputValue) ? value : inputValue;\n\n        const isBlurEvent = type === EVENTS.BLUR;\n        const {\n          isOnBlur: isReValidateOnBlur,\n          isOnChange: isReValidateOnChange,\n        } = getValidationModes(reValidateMode);\n\n        const shouldSkipValidation =\n          (!hasValidation(field._f, field._f.mount) &&\n            !resolver &&\n            !get(formStateRef.current.errors, name)) ||\n          skipValidation({\n            isBlurEvent,\n            isTouched: !!get(formStateRef.current.touchedFields, name),\n            isSubmitted: formStateRef.current.isSubmitted,\n            isReValidateOnBlur,\n            isReValidateOnChange,\n            ...validationMode,\n          });\n        const isWatched =\n          !isBlurEvent && isFieldWatched(name as FieldPath<TFieldValues>);\n\n        if (!isUndefined(inputValue)) {\n          field._f.value = inputValue;\n        }\n\n        const inputState = updateTouchAndDirtyState(\n          name,\n          field._f.value,\n          isBlurEvent,\n          false,\n        );\n\n        const shouldRender = !isEmptyObject(inputState) || isWatched;\n\n        if (shouldSkipValidation) {\n          !isBlurEvent &&\n            subjectsRef.current.watch.next({\n              name,\n              type,\n              values: getValues(),\n            });\n          return (\n            shouldRender &&\n            subjectsRef.current.state.next(\n              isWatched ? { name } : { ...inputState, name },\n            )\n          );\n        }\n\n        subjectsRef.current.state.next({\n          isValidating: true,\n        });\n\n        if (resolver) {\n          const { errors } = await resolverRef.current!(\n            getFieldsValues(fieldsRef),\n            contextRef.current,\n            getResolverOptions(\n              [name],\n              fieldsRef.current,\n              criteriaMode,\n              shouldUseNativeValidation,\n            ),\n          );\n          error = get(errors, name);\n\n          if (isCheckBoxInput(target as Ref) && !error) {\n            const parentNodeName = getNodeParentName(name);\n            const currentError = get(errors, parentNodeName, {});\n            currentError.type && currentError.message && (error = currentError);\n\n            if (\n              currentError ||\n              get(formStateRef.current.errors, parentNodeName)\n            ) {\n              name = parentNodeName;\n            }\n          }\n\n          isValid = isEmptyObject(errors);\n        } else {\n          error = (\n            await validateField(\n              field,\n              isValidateAllFieldCriteria,\n              shouldUseNativeValidation,\n            )\n          )[name];\n        }\n\n        !isBlurEvent &&\n          subjectsRef.current.watch.next({\n            name,\n            type,\n            values: getValues(),\n          });\n        shouldRenderBaseOnError(\n          false,\n          name,\n          error,\n          inputState,\n          isValid,\n          isWatched,\n        );\n      }\n    },\n    [],\n  );\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ...defaultValuesRef.current,\n      ...getFieldsValues(fieldsRef),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames as InternalFieldName)\n      : fieldNames.map((name) => get(values, name as InternalFieldName));\n  };\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name\n      ? convertToArrayPayload(name).forEach((inputName) =>\n          unset(formStateRef.current.errors, inputName),\n        )\n      : (formStateRef.current.errors = {});\n\n    subjectsRef.current.state.next({\n      errors: formStateRef.current.errors,\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (\n      ((get(fieldsRef.current, name) as Field) || { _f: {} })._f || {}\n    ).ref;\n\n    set(formStateRef.current.errors, name, {\n      ...error,\n      ref,\n    });\n\n    subjectsRef.current.state.next({\n      name,\n      errors: formStateRef.current.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watchInternal: WatchInternal<TFieldValues> = React.useCallback(\n    (fieldNames, defaultValue, isGlobal, formValues) => {\n      const isArrayNames = Array.isArray(fieldNames);\n      const fieldValues =\n        formValues || isMountedRef.current\n          ? {\n              ...defaultValuesRef.current,\n              ...(formValues || getFieldsValues(fieldsRef)),\n            }\n          : isUndefined(defaultValue)\n          ? defaultValuesRef.current\n          : isArrayNames\n          ? defaultValue\n          : { [fieldNames as InternalFieldName]: defaultValue };\n\n      if (isUndefined(fieldNames)) {\n        isGlobal && (namesRef.current.watchAll = true);\n        return fieldValues;\n      }\n\n      const result = [];\n\n      for (const fieldName of convertToArrayPayload(fieldNames)) {\n        isGlobal && namesRef.current.watch.add(fieldName as InternalFieldName);\n        result.push(get(fieldValues, fieldName as InternalFieldName));\n      }\n\n      return isArrayNames ? result : result[0];\n    },\n    [],\n  );\n\n  const watch: UseFormWatch<TFieldValues> = (\n    fieldName?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: unknown,\n  ) =>\n    isFunction(fieldName)\n      ? subjectsRef.current.watch.subscribe({\n          next: (info) =>\n            fieldName(\n              watchInternal(\n                undefined,\n                defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\n              ) as UnpackNestedValue<TFieldValues>,\n              info,\n            ),\n        })\n      : watchInternal(\n          fieldName as InternalFieldName | InternalFieldName[],\n          defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const inputName of name\n      ? convertToArrayPayload(name)\n      : namesRef.current.mount) {\n      namesRef.current.mount.delete(inputName);\n      namesRef.current.array.delete(inputName);\n\n      if (get(fieldsRef.current, inputName) as Field) {\n        !options.keepError && unset(formStateRef.current.errors, inputName);\n        !options.keepValue && unset(fieldsRef.current, inputName);\n        !options.keepDirty &&\n          unset(formStateRef.current.dirtyFields, inputName);\n        !options.keepTouched &&\n          unset(formStateRef.current.touchedFields, inputName);\n        !options.keepDefaultValue && unset(defaultValuesRef.current, inputName);\n\n        subjectsRef.current.watch.next({\n          name: inputName,\n          values: getValues(),\n        });\n      }\n    }\n\n    subjectsRef.current.state.next({\n      ...formStateRef.current,\n      ...(!options.keepDirty ? {} : { isDirty: getIsDirty() }),\n    });\n    !options.keepIsValid && updateIsValid();\n  };\n\n  const registerFieldRef = (\n    name: InternalFieldName,\n    ref: HTMLInputElement,\n    options?: RegisterOptions,\n  ): ((name: InternalFieldName) => void) | void => {\n    register(name as FieldPath<TFieldValues>, options);\n    let field = get(fieldsRef.current, name) as Field;\n\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n\n    if (\n      ref === field._f.ref ||\n      (isRadioOrCheckbox &&\n        compact(field._f.refs || []).find((option) => option === ref))\n    ) {\n      return;\n    }\n\n    field = {\n      _f: isRadioOrCheckbox\n        ? {\n            ...field._f,\n            refs: [\n              ...compact(field._f.refs || []).filter(\n                (ref) => isHTMLElement(ref) && document.contains(ref),\n              ),\n              ref,\n            ],\n            ref: { type: ref.type, name },\n          }\n        : {\n            ...field._f,\n            ref,\n          },\n    };\n\n    set(fieldsRef.current, name, field);\n\n    updateIsValidAndInputValue(name, ref);\n  };\n\n  const register: UseFormRegister<TFieldValues> = React.useCallback(\n    (name, options = {}) => {\n      const field = get(fieldsRef.current, name);\n\n      set(fieldsRef.current, name, {\n        _f: {\n          ...(field && field._f ? field._f : { ref: { name } }),\n          name,\n          mount: true,\n          ...options,\n        },\n      });\n      namesRef.current.mount.add(name);\n      !field && updateIsValidAndInputValue(name);\n\n      return isWindowUndefined\n        ? ({ name: name as InternalFieldName } as UseFormRegisterReturn)\n        : {\n            name,\n            onChange: handleChange,\n            onBlur: handleChange,\n            ref: (ref: HTMLInputElement | null): void => {\n              if (ref) {\n                registerFieldRef(name, ref, options);\n              } else {\n                const field = get(fieldsRef.current, name, {}) as Field;\n                const shouldUnmount =\n                  shouldUnregister || options.shouldUnregister;\n\n                if (field._f) {\n                  field._f.mount = false;\n                  // If initial state of field element is disabled,\n                  // value is not set on first \"register\"\n                  // re-sync the value in when it switched to enabled\n                  if (isUndefined(field._f.value)) {\n                    field._f.value = field._f.ref.value;\n                  }\n                }\n\n                shouldUnmount &&\n                  !(\n                    isNameInFieldArray(namesRef.current.array, name) &&\n                    inFieldArrayActionRef.current\n                  ) &&\n                  namesRef.current.unMount.add(name);\n              }\n            },\n          };\n    },\n    [],\n  );\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> = React.useCallback(\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let hasNoPromiseError = true;\n      let fieldValues = getFieldsValues(fieldsRef);\n\n      subjectsRef.current.state.next({\n        isSubmitting: true,\n      });\n\n      try {\n        if (resolver) {\n          const { errors, values } = await resolverRef.current!(\n            fieldValues,\n            contextRef.current,\n            getResolverOptions(\n              namesRef.current.mount,\n              fieldsRef.current,\n              criteriaMode,\n              shouldUseNativeValidation,\n            ),\n          );\n          formStateRef.current.errors = errors;\n          fieldValues = values;\n        } else {\n          await validateForm(fieldsRef.current);\n        }\n\n        if (\n          isEmptyObject(formStateRef.current.errors) &&\n          Object.keys(formStateRef.current.errors).every((name) =>\n            get(fieldValues, name),\n          )\n        ) {\n          subjectsRef.current.state.next({\n            errors: {},\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          onInvalid && (await onInvalid(formStateRef.current.errors, e));\n          shouldFocusError &&\n            focusFieldBy(\n              fieldsRef.current,\n              (key) => get(formStateRef.current.errors, key),\n              namesRef.current.mount,\n            );\n        }\n      } catch (err) {\n        hasNoPromiseError = false;\n        throw err;\n      } finally {\n        formStateRef.current.isSubmitted = true;\n        subjectsRef.current.state.next({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful:\n            isEmptyObject(formStateRef.current.errors) && hasNoPromiseError,\n          submitCount: formStateRef.current.submitCount + 1,\n          errors: formStateRef.current.errors,\n        });\n      }\n    },\n    [\n      shouldFocusError,\n      isValidateAllFieldCriteria,\n      criteriaMode,\n      shouldUseNativeValidation,\n    ],\n  );\n\n  const registerAbsentFields = <T extends DefaultValues<TFieldValues>>(\n    defaultValues: T,\n    name = '',\n  ): void => {\n    for (const key in defaultValues) {\n      const value = defaultValues[key];\n      const fieldName = name + (name ? '.' : '') + key;\n      const field = get(fieldsRef.current, fieldName);\n\n      if (!field || !field._f) {\n        if (isObject(value) || Array.isArray(value)) {\n          registerAbsentFields(value, fieldName);\n        } else if (!field) {\n          register(fieldName as Path<TFieldValues>, { value });\n        }\n      }\n    }\n  };\n\n  const reset: UseFormReset<TFieldValues> = (values, keepStateOptions = {}) => {\n    const updatedValues = values || defaultValuesRef.current;\n\n    if (isWeb && !keepStateOptions.keepValues) {\n      for (const name of namesRef.current.mount) {\n        const field = get(fieldsRef.current, name);\n        if (field && field._f) {\n          const inputRef = Array.isArray(field._f.refs)\n            ? field._f.refs[0]\n            : field._f.ref;\n\n          try {\n            isHTMLElement(inputRef) && inputRef.closest('form')!.reset();\n            break;\n          } catch {}\n        }\n      }\n    }\n\n    !keepStateOptions.keepDefaultValues &&\n      (defaultValuesRef.current = { ...updatedValues });\n\n    if (!keepStateOptions.keepValues) {\n      fieldsRef.current = {};\n\n      subjectsRef.current.control.next({\n        values: keepStateOptions.keepDefaultValues\n          ? defaultValuesRef.current\n          : { ...updatedValues },\n      });\n\n      subjectsRef.current.watch.next({\n        values: { ...updatedValues },\n      });\n\n      subjectsRef.current.array.next({\n        values: { ...updatedValues },\n        isReset: true,\n      });\n    }\n\n    namesRef.current = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n    };\n\n    subjectsRef.current.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? formStateRef.current.submitCount\n        : 0,\n      isDirty: keepStateOptions.keepDirty\n        ? formStateRef.current.isDirty\n        : keepStateOptions.keepDefaultValues\n        ? deepEqual(values, defaultValuesRef.current)\n        : false,\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? formStateRef.current.isSubmitted\n        : false,\n      dirtyFields: keepStateOptions.keepDirty\n        ? formStateRef.current.dirtyFields\n        : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? formStateRef.current.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? formStateRef.current.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n\n    isMountedRef.current = !!keepStateOptions.keepIsValid;\n  };\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name) =>\n    get(fieldsRef.current, name)._f.ref.focus();\n\n  React.useEffect(() => {\n    const formStateSubscription = subjectsRef.current.state.subscribe({\n      next(formState) {\n        if (shouldRenderFormState(formState, readFormStateRef.current, true)) {\n          formStateRef.current = {\n            ...formStateRef.current,\n            ...formState,\n          };\n          updateFormState(formStateRef.current);\n        }\n      },\n    });\n\n    const useFieldArraySubscription = subjectsRef.current.array.subscribe({\n      next(state) {\n        if (state.values && state.name && readFormStateRef.current.isValid) {\n          const values = getFieldsValues(fieldsRef);\n          set(values, state.name, state.values);\n          updateIsValid(values);\n        }\n      },\n    });\n\n    return () => {\n      formStateSubscription.unsubscribe();\n      useFieldArraySubscription.unsubscribe();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const isLiveInDom = (ref: Ref) =>\n      !isHTMLElement(ref) || !document.contains(ref);\n\n    if (!isMountedRef.current) {\n      isMountedRef.current = true;\n      readFormStateRef.current.isValid && updateIsValid();\n      !shouldUnregister && registerAbsentFields(defaultValuesRef.current);\n    }\n\n    for (const name of namesRef.current.unMount) {\n      const field = get(fieldsRef.current, name) as Field;\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every(isLiveInDom)\n          : isLiveInDom(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    namesRef.current.unMount = new Set();\n  });\n\n  return {\n    control: React.useMemo(\n      () => ({\n        register,\n        inFieldArrayActionRef,\n        getIsDirty,\n        subjectsRef,\n        watchInternal,\n        fieldsRef,\n        updateIsValid,\n        namesRef,\n        readFormStateRef,\n        formStateRef,\n        defaultValuesRef,\n        fieldArrayDefaultValuesRef,\n        unregister,\n        shouldUnmount: shouldUnregister,\n      }),\n      [],\n    ),\n    formState: getProxyFormState<TFieldValues>(\n      isProxyEnabled,\n      formState,\n      readFormStateRef,\n    ),\n    trigger,\n    register,\n    handleSubmit,\n    watch: React.useCallback(watch, []),\n    setValue: React.useCallback(setValue, [setInternalValues]),\n    getValues: React.useCallback(getValues, []),\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    unregister: React.useCallback(unregister, []),\n    setError: React.useCallback(setError, []),\n    setFocus: React.useCallback(setFocus, []),\n  };\n}\n","import * as React from 'react';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { DefaultButton } from '../DefaultButton/DefaultButton';\nimport { IButtonProps } from '../Button.types';\n\n/**\n * {@docCategory Button}\n */\n@customizable('PrimaryButton', ['theme', 'styles'], true)\nexport class PrimaryButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    return <DefaultButton {...this.props} primary={true} onRenderDescription={nullRender} />;\n  }\n}\n","import * as React from 'react';\n\n/**\n * DelayedRender component props.\n *\n * @public\n */\n// eslint-disable-next-line deprecation/deprecation\nexport interface IDelayedRenderProps extends React.Props<{}> {\n  /**\n   * Number of milliseconds to delay rendering children.\n   */\n  delay?: number;\n}\n\n/**\n * DelayedRender component state.\n *\n * @internal\n */\nexport interface IDelayedRenderState {\n  /**\n   * Whether the component is rendered or not.\n   */\n  isRendered: boolean;\n}\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nexport class DelayedRender extends React.Component<IDelayedRenderProps, IDelayedRenderState> {\n  public static defaultProps = {\n    delay: 0,\n  };\n\n  private _timeoutId: number | undefined;\n\n  constructor(props: IDelayedRenderProps) {\n    super(props);\n    this.state = {\n      isRendered: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    let { delay } = this.props;\n    this._timeoutId = window.setTimeout(() => {\n      this.setState({\n        isRendered: true,\n      });\n    }, delay);\n  }\n\n  public componentWillUnmount(): void {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  public render(): React.ReactElement<{}> | null {\n    return this.state.isRendered ? (React.Children.only(this.props.children) as React.ReactElement<{}>) : null;\n  }\n}\n","import * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nimport { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nconst getClassNames = classNamesFunction<ILabelStyleProps, ILabelStyles>({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class LabelBase extends React.Component<ILabelProps, {}> {\n  public render(): JSX.Element {\n    const { as: RootType = 'label', children, className, disabled, styles, required, theme } = this.props;\n    const classNames = getClassNames(styles, {\n      className,\n      disabled,\n      required,\n      theme: theme!,\n    });\n    return (\n      <RootType {...getNativeProps(this.props, divProperties)} className={classNames.root}>\n        {children}\n      </RootType>\n    );\n  }\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { LabelBase } from './Label.base';\nimport { getStyles } from './Label.styles';\nimport { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nexport const Label: React.FunctionComponent<ILabelProps> = styled<ILabelProps, ILabelStyleProps, ILabelStyles>(\n  LabelBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Label',\n  },\n);\n","import { HighContrastSelector, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { ILabelStyleProps, ILabelStyles } from './Label.types';\n\nexport const getStyles = (props: ILabelStyleProps): ILabelStyles => {\n  const { theme, className, disabled, required } = props;\n  const { semanticColors } = theme;\n\n  // Tokens\n  const labelFontWeight = FontWeights.semibold;\n  const labelColor = semanticColors.bodyText;\n  const labelDisabledColor = semanticColors.disabledBodyText;\n  const labelRequiredStarColor = semanticColors.errorText;\n\n  return {\n    root: [\n      'ms-Label',\n      theme.fonts.medium,\n      {\n        fontWeight: labelFontWeight,\n        color: labelColor,\n        boxSizing: 'border-box',\n        boxShadow: 'none',\n        margin: 0,\n        display: 'block',\n        padding: '5px 0',\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n      },\n      disabled && {\n        color: labelDisabledColor,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      required && {\n        selectors: {\n          '::after': {\n            content: `' *'`,\n            color: labelRequiredStarColor,\n            paddingRight: 12,\n          },\n        },\n      },\n      className,\n    ],\n  };\n};\n","import * as React from 'react';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { Label, ILabelStyleProps, ILabelStyles } from '../../Label';\nimport { Icon } from '../../Icon';\nimport {\n  Async,\n  classNamesFunction,\n  DelayedRender,\n  getId,\n  getNativeProps,\n  getWindow,\n  IStyleFunctionOrObject,\n  initializeComponentRef,\n  inputProperties,\n  isControlled,\n  isIE11,\n  textAreaProperties,\n  warn,\n  warnControlledUsage,\n  warnMutuallyExclusive,\n} from '../../Utilities';\nimport { ITextField, ITextFieldProps, ITextFieldStyleProps, ITextFieldStyles } from './TextField.types';\n\nconst getClassNames = classNamesFunction<ITextFieldStyleProps, ITextFieldStyles>();\n\n/** @internal */\nexport interface ITextFieldState {\n  /** The currently displayed value if uncontrolled. */\n  uncontrolledValue: string | undefined;\n\n  /** Is true when the control has focus. */\n  isFocused?: boolean;\n\n  /**\n   * Dynamic error message returned by `onGetErrorMessage`.\n   * Use `this._errorMessage` to get the actual current error message.\n   */\n  errorMessage: string | JSX.Element;\n\n  /**\n   * Whether this field has `type='password'` and `canRevealPassword=true`, and the password is\n   * currently being revealed.\n   */\n  isRevealingPassword?: boolean;\n}\n\n/** @internal */\nexport interface ITextFieldSnapshot {\n  /**\n   * If set, the text field is changing between single- and multi-line, so we'll need to reset\n   * selection/cursor after the change completes.\n   */\n  selection?: [number | null, number | null];\n}\n\nconst DEFAULT_STATE_VALUE = '';\nconst COMPONENT_NAME = 'TextField';\n\nconst REVEAL_ICON_NAME = 'RedEye';\nconst HIDE_ICON_NAME = 'Hide';\n\nexport class TextFieldBase\n  extends React.Component<ITextFieldProps, ITextFieldState, ITextFieldSnapshot>\n  implements ITextField {\n  public static defaultProps: ITextFieldProps = {\n    resizable: true,\n    deferredValidationTime: 200,\n    validateOnLoad: true,\n  };\n\n  /** Fallback ID if none is provided in props. Access proper value via `this._id`. */\n  private _fallbackId: string;\n  private _descriptionId: string;\n  private _labelId: string;\n  private _delayedValidate: (value: string | undefined) => void;\n  private _lastValidation: number;\n  private _latestValidateValue: string | undefined;\n  private _hasWarnedNullValue: boolean | undefined;\n  private _textElement = React.createRef<HTMLTextAreaElement | HTMLInputElement>();\n  private _classNames: IProcessedStyleSet<ITextFieldStyles>;\n  private _async: Async;\n  /** Most recent value from a change or input event, to help avoid processing events twice */\n  private _lastChangeValue: string | undefined;\n\n  public constructor(props: ITextFieldProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnMutuallyExclusive(COMPONENT_NAME, props, {\n        errorMessage: 'onGetErrorMessage',\n      });\n    }\n\n    this._fallbackId = getId(COMPONENT_NAME);\n    this._descriptionId = getId(COMPONENT_NAME + 'Description');\n    this._labelId = getId(COMPONENT_NAME + 'Label');\n\n    this._warnControlledUsage();\n\n    let { defaultValue = DEFAULT_STATE_VALUE } = props;\n    if (typeof defaultValue === 'number') {\n      // This isn't allowed per the props, but happens anyway.\n      defaultValue = String(defaultValue);\n    }\n    this.state = {\n      uncontrolledValue: this._isControlled ? undefined : defaultValue,\n      isFocused: false,\n      errorMessage: '',\n    };\n\n    this._delayedValidate = this._async.debounce(this._validate, this.props.deferredValidationTime);\n    this._lastValidation = 0;\n  }\n\n  /**\n   * Gets the current value of the text field.\n   */\n  public get value(): string | undefined {\n    return _getValue(this.props, this.state);\n  }\n\n  public componentDidMount(): void {\n    this._adjustInputHeight();\n\n    if (this.props.validateOnLoad) {\n      this._validate(this.value);\n    }\n  }\n\n  public componentWillUnmount() {\n    this._async.dispose();\n  }\n\n  public getSnapshotBeforeUpdate(prevProps: ITextFieldProps, prevState: ITextFieldState): ITextFieldSnapshot | null {\n    return {\n      selection: [this.selectionStart, this.selectionEnd],\n    };\n  }\n\n  public componentDidUpdate(\n    prevProps: ITextFieldProps,\n    prevState: ITextFieldState,\n    snapshot: ITextFieldSnapshot,\n  ): void {\n    const props = this.props;\n    const { selection = [null, null] } = snapshot || {};\n    const [start, end] = selection;\n\n    if (!!prevProps.multiline !== !!props.multiline && prevState.isFocused) {\n      // The text field has just changed between single- and multi-line, so we need to reset focus\n      // and selection/cursor.\n      this.focus();\n      if (start !== null && end !== null && start >= 0 && end >= 0) {\n        this.setSelectionRange(start, end);\n      }\n    }\n\n    if (prevProps.value !== props.value) {\n      // Only if the value in props changed, reset the record of the last value seen by a\n      // change/input event (don't do this if the value in state changed, since at least in tests\n      // the state update may happen before the second event in a series)\n      this._lastChangeValue = undefined;\n    }\n\n    const prevValue = _getValue(prevProps, prevState);\n    const value = this.value;\n    if (prevValue !== value) {\n      // Handle controlled/uncontrolled warnings and status\n      this._warnControlledUsage(prevProps);\n\n      // Clear error message if needed\n      // TODO: is there any way to do this without an extra render?\n      if (this.state.errorMessage && !props.errorMessage) {\n        this.setState({ errorMessage: '' });\n      }\n\n      // Adjust height if needed based on new value\n      this._adjustInputHeight();\n\n      // TODO: #5875 added logic to trigger validation in componentWillReceiveProps and other places.\n      // This seems a bit odd and hard to integrate with the new approach.\n      // (Starting to think we should just put the validation logic in a separate wrapper component...?)\n      if (_shouldValidateAllChanges(props)) {\n        this._delayedValidate(value);\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      borderless,\n      className,\n      disabled,\n      iconProps,\n      inputClassName,\n      label,\n      multiline,\n      required,\n      underlined,\n      prefix,\n      resizable,\n      suffix,\n      theme,\n      styles,\n      autoAdjustHeight,\n      canRevealPassword,\n      revealPasswordAriaLabel,\n      type,\n      onRenderPrefix = this._onRenderPrefix,\n      onRenderSuffix = this._onRenderSuffix,\n      onRenderLabel = this._onRenderLabel,\n      onRenderDescription = this._onRenderDescription,\n    } = this.props;\n    const { isFocused, isRevealingPassword } = this.state;\n    const errorMessage = this._errorMessage;\n\n    const hasRevealButton = !!canRevealPassword && type === 'password' && _browserNeedsRevealButton();\n\n    const classNames = (this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      disabled,\n      focused: isFocused,\n      required,\n      multiline,\n      hasLabel: !!label,\n      hasErrorMessage: !!errorMessage,\n      borderless,\n      resizable,\n      hasIcon: !!iconProps,\n      underlined,\n      inputClassName,\n      autoAdjustHeight,\n      hasRevealButton,\n    }));\n\n    return (\n      // eslint-disable-next-line deprecation/deprecation\n      <div ref={this.props.elementRef} className={classNames.root}>\n        <div className={classNames.wrapper}>\n          {onRenderLabel(this.props, this._onRenderLabel)}\n          <div className={classNames.fieldGroup}>\n            {(prefix !== undefined || this.props.onRenderPrefix) && (\n              <div className={classNames.prefix}>{onRenderPrefix(this.props, this._onRenderPrefix)}</div>\n            )}\n            {multiline ? this._renderTextArea() : this._renderInput()}\n            {iconProps && <Icon className={classNames.icon} {...iconProps} />}\n            {hasRevealButton && (\n              // Explicitly set type=\"button\" since the default button type within a form is \"submit\"\n              <button\n                aria-label={revealPasswordAriaLabel}\n                className={classNames.revealButton}\n                onClick={this._onRevealButtonClick}\n                aria-pressed={!!isRevealingPassword}\n                type=\"button\"\n              >\n                <span className={classNames.revealSpan}>\n                  <Icon\n                    className={classNames.revealIcon}\n                    iconName={isRevealingPassword ? HIDE_ICON_NAME : REVEAL_ICON_NAME}\n                  />\n                </span>\n              </button>\n            )}\n            {(suffix !== undefined || this.props.onRenderSuffix) && (\n              <div className={classNames.suffix}>{onRenderSuffix(this.props, this._onRenderSuffix)}</div>\n            )}\n          </div>\n        </div>\n        {this._isDescriptionAvailable && (\n          <span id={this._descriptionId}>\n            {onRenderDescription(this.props, this._onRenderDescription)}\n            {errorMessage && (\n              <div role=\"alert\">\n                <DelayedRender>{this._renderErrorMessage()}</DelayedRender>\n              </div>\n            )}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Sets focus on the text field\n   */\n  public focus() {\n    if (this._textElement.current) {\n      this._textElement.current.focus();\n    }\n  }\n\n  /**\n   * Blurs the text field.\n   */\n  public blur() {\n    if (this._textElement.current) {\n      this._textElement.current.blur();\n    }\n  }\n\n  /**\n   * Selects the text field\n   */\n  public select() {\n    if (this._textElement.current) {\n      this._textElement.current.select();\n    }\n  }\n\n  /**\n   * Sets the selection start of the text field to a specified value\n   */\n  public setSelectionStart(value: number): void {\n    if (this._textElement.current) {\n      this._textElement.current.selectionStart = value;\n    }\n  }\n\n  /**\n   * Sets the selection end of the text field to a specified value\n   */\n  public setSelectionEnd(value: number): void {\n    if (this._textElement.current) {\n      this._textElement.current.selectionEnd = value;\n    }\n  }\n\n  /**\n   * Gets the selection start of the text field\n   */\n  public get selectionStart(): number | null {\n    return this._textElement.current ? this._textElement.current.selectionStart : -1;\n  }\n\n  /**\n   * Gets the selection end of the text field\n   */\n  public get selectionEnd(): number | null {\n    return this._textElement.current ? this._textElement.current.selectionEnd : -1;\n  }\n\n  /**\n   * Sets the start and end positions of a selection in a text field.\n   * @param start - Index of the start of the selection.\n   * @param end - Index of the end of the selection.\n   */\n  public setSelectionRange(start: number, end: number): void {\n    if (this._textElement.current) {\n      (this._textElement.current as HTMLInputElement).setSelectionRange(start, end);\n    }\n  }\n\n  private _warnControlledUsage(prevProps?: ITextFieldProps): void {\n    // Show warnings if props are being used in an invalid way\n    warnControlledUsage({\n      componentId: this._id,\n      componentName: COMPONENT_NAME,\n      props: this.props,\n      oldProps: prevProps,\n      valueProp: 'value',\n      defaultValueProp: 'defaultValue',\n      onChangeProp: 'onChange',\n      readOnlyProp: 'readOnly',\n    });\n\n    if (this.props.value === null && !this._hasWarnedNullValue) {\n      this._hasWarnedNullValue = true;\n      warn(\n        `Warning: 'value' prop on '${COMPONENT_NAME}' should not be null. Consider using an ` +\n          'empty string to clear the component or undefined to indicate an uncontrolled component.',\n      );\n    }\n  }\n\n  /** Returns `props.id` if available, or a fallback if not. */\n  private get _id(): string {\n    return this.props.id || this._fallbackId;\n  }\n\n  private get _isControlled(): boolean {\n    return isControlled(this.props, 'value');\n  }\n\n  private _onFocus = (ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus(ev);\n    }\n\n    this.setState({ isFocused: true }, () => {\n      if (this.props.validateOnFocusIn) {\n        this._validate(this.value);\n      }\n    });\n  };\n\n  private _onBlur = (ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n\n    this.setState({ isFocused: false }, () => {\n      if (this.props.validateOnFocusOut) {\n        this._validate(this.value);\n      }\n    });\n  };\n\n  private _onRenderLabel = (props: ITextFieldProps): JSX.Element | null => {\n    const { label, required } = props;\n    // IProcessedStyleSet definition requires casting for what Label expects as its styles prop\n    const labelStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.label as IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>)\n      : undefined;\n\n    if (label) {\n      return (\n        <Label required={required} htmlFor={this._id} styles={labelStyles} disabled={props.disabled} id={this._labelId}>\n          {props.label}\n        </Label>\n      );\n    }\n    return null;\n  };\n\n  private _onRenderDescription = (props: ITextFieldProps): JSX.Element | null => {\n    if (props.description) {\n      return <span className={this._classNames.description}>{props.description}</span>;\n    }\n    return null;\n  };\n\n  private _onRenderPrefix(props: ITextFieldProps): JSX.Element {\n    const { prefix } = props;\n    return <span style={{ paddingBottom: '1px' }}>{prefix}</span>;\n  }\n\n  private _onRenderSuffix(props: ITextFieldProps): JSX.Element {\n    const { suffix } = props;\n    return <span style={{ paddingBottom: '1px' }}>{suffix}</span>;\n  }\n\n  /**\n   * Current error message from either `props.errorMessage` or the result of `props.onGetErrorMessage`.\n   *\n   * - If there is no validation error or we have not validated the input value, errorMessage is an empty string.\n   * - If we have done the validation and there is validation error, errorMessage is the validation error message.\n   */\n  private get _errorMessage(): string | JSX.Element {\n    const { errorMessage = this.state.errorMessage } = this.props;\n    return errorMessage || '';\n  }\n\n  /**\n   * Renders error message based on the type of the message.\n   *\n   * - If error message is string, it will render using the built in styles.\n   * - If error message is an element, user has full control over how it's rendered.\n   */\n  private _renderErrorMessage(): JSX.Element | null {\n    const errorMessage = this._errorMessage;\n\n    return errorMessage ? (\n      typeof errorMessage === 'string' ? (\n        <p className={this._classNames.errorMessage}>\n          <span data-automation-id=\"error-message\">{errorMessage}</span>\n        </p>\n      ) : (\n        <div className={this._classNames.errorMessage} data-automation-id=\"error-message\">\n          {errorMessage}\n        </div>\n      )\n    ) : null;\n  }\n\n  /**\n   * If a custom description render function is supplied then treat description as always available.\n   * Otherwise defer to the presence of description or error message text.\n   */\n  private get _isDescriptionAvailable(): boolean {\n    const props = this.props;\n    return !!(props.onRenderDescription || props.description || this._errorMessage);\n  }\n\n  private _renderTextArea(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    const textAreaProps = getNativeProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>>(\n      this.props,\n      textAreaProperties,\n      ['defaultValue'],\n    );\n    const ariaLabelledBy = this.props['aria-labelledby'] || (this.props.label ? this._labelId : undefined);\n    return (\n      <textarea\n        id={this._id}\n        {...textAreaProps}\n        ref={this._textElement as React.RefObject<HTMLTextAreaElement>}\n        value={this.value || ''}\n        onInput={this._onInputChange}\n        onChange={this._onInputChange}\n        className={this._classNames.field}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby']}\n        aria-invalid={!!this._errorMessage}\n        aria-label={this.props.ariaLabel}\n        readOnly={this.props.readOnly}\n        onFocus={this._onFocus}\n        onBlur={this._onBlur}\n      />\n    );\n  }\n\n  private _renderInput(): React.ReactElement<React.HTMLAttributes<HTMLInputElement>> {\n    const inputProps = getNativeProps<React.HTMLAttributes<HTMLInputElement>>(this.props, inputProperties, [\n      'defaultValue',\n      'type',\n    ]);\n    const ariaLabelledBy = this.props['aria-labelledby'] || (this.props.label ? this._labelId : undefined);\n    const type = this.state.isRevealingPassword ? 'text' : this.props.type ?? 'text';\n    return (\n      <input\n        type={type}\n        id={this._id}\n        aria-labelledby={ariaLabelledBy}\n        {...inputProps}\n        ref={this._textElement as React.RefObject<HTMLInputElement>}\n        value={this.value || ''}\n        onInput={this._onInputChange}\n        onChange={this._onInputChange}\n        className={this._classNames.field}\n        aria-label={this.props.ariaLabel}\n        aria-describedby={this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby']}\n        aria-invalid={!!this._errorMessage}\n        readOnly={this.props.readOnly}\n        onFocus={this._onFocus}\n        onBlur={this._onBlur}\n      />\n    );\n  }\n\n  private _onRevealButtonClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    this.setState(prevState => ({ isRevealingPassword: !prevState.isRevealingPassword }));\n  };\n\n  private _onInputChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    // Previously, we needed to call both onInput and onChange due to some weird IE/React issues,\n    // which have *probably* been fixed now:\n    // - https://github.com/microsoft/fluentui/issues/744 (likely fixed)\n    // - https://github.com/microsoft/fluentui/issues/824 (confirmed fixed)\n\n    // TODO (Fabric 8?) - Switch to calling only onChange. This switch is pretty disruptive for\n    // tests (ours and maybe consumers' too), so it seemed best to do the switch in a major bump.\n\n    const element = event.target as HTMLInputElement;\n    const value = element.value;\n    // Ignore this event if any of the following are true:\n    // - the value is undefined (in case one of the IE bugs comes back)\n    // - it's a duplicate event (important since onInputChange is called twice per actual user event)\n    // - it's the same as the previous value\n    const previousValue = _getValue(this.props, this.state) || '';\n    if (value === undefined || value === this._lastChangeValue || value === previousValue) {\n      this._lastChangeValue = undefined;\n      return;\n    }\n    this._lastChangeValue = value;\n\n    this.props.onChange?.(event, value);\n\n    if (!this._isControlled) {\n      // ONLY if this is an uncontrolled component, update the displayed value.\n      // (Controlled components must update the `value` prop from `onChange`.)\n      this.setState({ uncontrolledValue: value });\n    }\n  };\n\n  private _validate(value: string | undefined): void {\n    // In case _validate is called again while validation promise is executing\n    if (this._latestValidateValue === value && _shouldValidateAllChanges(this.props)) {\n      return;\n    }\n\n    this._latestValidateValue = value;\n    const onGetErrorMessage = this.props.onGetErrorMessage;\n    const result = onGetErrorMessage && onGetErrorMessage(value || '');\n\n    if (result !== undefined) {\n      if (typeof result === 'string' || !('then' in result)) {\n        this.setState({ errorMessage: result });\n        this._notifyAfterValidate(value, result);\n      } else {\n        const currentValidation: number = ++this._lastValidation;\n\n        result.then((errorMessage: string | JSX.Element) => {\n          if (currentValidation === this._lastValidation) {\n            this.setState({ errorMessage });\n          }\n          this._notifyAfterValidate(value, errorMessage);\n        });\n      }\n    } else {\n      this._notifyAfterValidate(value, '');\n    }\n  }\n\n  private _notifyAfterValidate(value: string | undefined, errorMessage: string | JSX.Element): void {\n    if (value === this.value && this.props.onNotifyValidationResult) {\n      this.props.onNotifyValidationResult(errorMessage, value);\n    }\n  }\n\n  private _adjustInputHeight(): void {\n    if (this._textElement.current && this.props.autoAdjustHeight && this.props.multiline) {\n      const textField = this._textElement.current;\n      textField.style.height = '';\n      textField.style.height = textField.scrollHeight + 'px';\n    }\n  }\n}\n\n/** Get the value from the given state and props (converting from number to string if needed) */\nfunction _getValue(props: ITextFieldProps, state: ITextFieldState): string | undefined {\n  const { value = state.uncontrolledValue } = props;\n  if (typeof value === 'number') {\n    // not allowed per typings, but happens anyway\n    return String(value);\n  }\n  return value;\n}\n\n/**\n * If `validateOnFocusIn` or `validateOnFocusOut` is true, validation should run **only** on that event.\n * Otherwise, validation should run on every change.\n */\nfunction _shouldValidateAllChanges(props: ITextFieldProps): boolean {\n  return !(props.validateOnFocusIn || props.validateOnFocusOut);\n}\n\n// Only calculate this once across all TextFields, since will stay the same\nlet __browserNeedsRevealButton: boolean | undefined;\n\nfunction _browserNeedsRevealButton() {\n  if (typeof __browserNeedsRevealButton !== 'boolean') {\n    const win = getWindow();\n\n    if (win?.navigator) {\n      // Edge, Chromium Edge\n      const isEdge = /^Edg/.test(win.navigator.userAgent || '');\n\n      __browserNeedsRevealButton = !(isIE11() || isEdge);\n    } else {\n      __browserNeedsRevealButton = true;\n    }\n  }\n  return __browserNeedsRevealButton;\n}\n","import { getWindow } from './dom/getWindow';\n\nexport const isIE11 = (): boolean => {\n  const win = getWindow();\n\n  if (!win?.navigator?.userAgent) {\n    return false;\n  }\n\n  return win.navigator.userAgent.indexOf('rv:11.0') > -1;\n};\n","/**\n * Determines whether a component is controlled.\n * @param props - Component props\n * @param valueProp - Prop containing the controlled value\n * @returns true if controlled, false if uncontrolled\n */\nexport function isControlled<P>(props: P, valueProp: keyof P): boolean {\n  // React's built-in <input> considers a prop to be provided if its value is non-null/undefined.\n  // Mirror that behavior here (rather than checking for just undefined).\n  return props[valueProp] !== undefined && props[valueProp] !== null;\n}\n","import {\n  AnimationClassNames,\n  getGlobalClassNames,\n  getInputFocusStyle,\n  HighContrastSelector,\n  IStyle,\n  normalize,\n  getPlaceholderStyles,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { ILabelStyles, ILabelStyleProps } from '../../Label';\nimport { ITextFieldStyleProps, ITextFieldStyles } from './TextField.types';\nimport { IStyleFunctionOrObject } from '@fluentui/utilities';\n\nconst globalClassNames = {\n  root: 'ms-TextField',\n  description: 'ms-TextField-description',\n  errorMessage: 'ms-TextField-errorMessage',\n  field: 'ms-TextField-field',\n  fieldGroup: 'ms-TextField-fieldGroup',\n  prefix: 'ms-TextField-prefix',\n  suffix: 'ms-TextField-suffix',\n  wrapper: 'ms-TextField-wrapper',\n  revealButton: 'ms-TextField-reveal',\n\n  multiline: 'ms-TextField--multiline',\n  borderless: 'ms-TextField--borderless',\n  underlined: 'ms-TextField--underlined',\n  unresizable: 'ms-TextField--unresizable',\n\n  required: 'is-required',\n  disabled: 'is-disabled',\n  active: 'is-active',\n};\n\nfunction getLabelStyles(props: ITextFieldStyleProps): IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles> {\n  const { underlined, disabled, focused, theme } = props;\n  const { palette, fonts } = theme;\n\n  return () => ({\n    root: [\n      underlined &&\n        disabled && {\n          color: palette.neutralTertiary,\n        },\n      underlined && {\n        fontSize: fonts.medium.fontSize,\n        marginRight: 8,\n        paddingLeft: 12,\n        paddingRight: 0,\n        lineHeight: '22px',\n        height: 32,\n      },\n      underlined &&\n        focused && {\n          selectors: {\n            [HighContrastSelector]: {\n              height: 31, // -1px to prevent jumpiness in HC with the increased border-width to 2px\n            },\n          },\n        },\n    ],\n  });\n}\n\nexport function getStyles(props: ITextFieldStyleProps): ITextFieldStyles {\n  const {\n    theme,\n    className,\n    disabled,\n    focused,\n    required,\n    multiline,\n    hasLabel,\n    borderless,\n    underlined,\n    hasIcon,\n    resizable,\n    hasErrorMessage,\n    inputClassName,\n    autoAdjustHeight,\n    hasRevealButton,\n  } = props;\n\n  const { semanticColors, effects, fonts } = theme;\n\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  const fieldPrefixSuffix: IStyle = {\n    // Suffix/Prefix are not editable so the disabled slot perfectly fits.\n    background: semanticColors.disabledBackground,\n    color: !disabled ? semanticColors.inputPlaceholderText : semanticColors.disabledText,\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 10px',\n    lineHeight: 1,\n    whiteSpace: 'nowrap',\n    flexShrink: 0,\n    selectors: {\n      [HighContrastSelector]: {\n        background: 'Window',\n        color: disabled ? 'GrayText' : 'WindowText',\n      },\n    },\n  };\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = [\n    fonts.medium,\n    {\n      color: semanticColors.inputPlaceholderText,\n      opacity: 1,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  ];\n\n  const disabledPlaceholderStyles: IStyle = {\n    color: semanticColors.disabledText,\n    selectors: {\n      [HighContrastSelector]: {\n        color: 'GrayText',\n      },\n    },\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      required && classNames.required,\n      disabled && classNames.disabled,\n      focused && classNames.active,\n      multiline && classNames.multiline,\n      borderless && classNames.borderless,\n      underlined && classNames.underlined,\n      normalize,\n      {\n        position: 'relative',\n      },\n      className,\n    ],\n    wrapper: [\n      classNames.wrapper,\n\n      underlined && [\n        {\n          display: 'flex',\n          borderBottom: `1px solid ${!hasErrorMessage ? semanticColors.inputBorder : semanticColors.errorText}`,\n          width: '100%',\n        },\n        disabled && {\n          borderBottomColor: semanticColors.disabledBackground,\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n              ...getHighContrastNoAdjustStyle(),\n            },\n          },\n        },\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderBottomColor: !hasErrorMessage ? semanticColors.inputBorderHovered : semanticColors.errorText,\n              selectors: {\n                [HighContrastSelector]: {\n                  borderBottomColor: 'Highlight',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n          },\n        },\n        focused && [\n          {\n            position: 'relative',\n          },\n          getInputFocusStyle(\n            !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\n            0,\n            'borderBottom',\n          ),\n        ],\n      ],\n    ],\n    fieldGroup: [\n      classNames.fieldGroup,\n      normalize,\n      {\n        border: `1px solid ${semanticColors.inputBorder}`,\n        borderRadius: effects.roundedCorner2,\n        background: semanticColors.inputBackground,\n        cursor: 'text',\n        height: 32,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        position: 'relative',\n      },\n      multiline && {\n        minHeight: '60px',\n        height: 'auto',\n        display: 'flex',\n      },\n\n      !focused &&\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderColor: semanticColors.inputBorderHovered,\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'Highlight',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n          },\n        },\n\n      focused &&\n        !underlined &&\n        getInputFocusStyle(\n          !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\n          effects.roundedCorner2,\n        ),\n      disabled && {\n        borderColor: semanticColors.disabledBackground,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n\n        cursor: 'default',\n      },\n      borderless && {\n        border: 'none',\n      },\n      borderless &&\n        focused && {\n          border: 'none',\n          selectors: {\n            ':after': {\n              border: 'none',\n            },\n          },\n        },\n      underlined && {\n        flex: '1 1 0px',\n        border: 'none',\n        textAlign: 'left',\n      },\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n\n      hasErrorMessage &&\n        !underlined && {\n          borderColor: semanticColors.errorText,\n          selectors: {\n            '&:hover': {\n              borderColor: semanticColors.errorText,\n            },\n          },\n        },\n      !hasLabel &&\n        required && {\n          selectors: {\n            ':before': {\n              content: `'*'`,\n              color: semanticColors.errorText,\n              position: 'absolute',\n              top: -5,\n              right: -10,\n            },\n            [HighContrastSelector]: {\n              selectors: {\n                ':before': {\n                  color: 'WindowText',\n                  right: -14, // moving the * 4 pixel to right to alleviate border clipping in HC mode.\n                },\n              },\n            },\n          },\n        },\n    ],\n    field: [\n      fonts.medium,\n      classNames.field,\n      normalize,\n      {\n        borderRadius: 0,\n        border: 'none',\n        background: 'none',\n        backgroundColor: 'transparent',\n        color: semanticColors.inputText,\n        padding: '0 8px',\n        width: '100%',\n        minWidth: 0,\n        textOverflow: 'ellipsis',\n        outline: 0,\n        selectors: {\n          '&:active, &:focus, &:hover': { outline: 0 },\n          '::-ms-clear': {\n            display: 'none',\n          },\n          [HighContrastSelector]: {\n            background: 'Window',\n            color: disabled ? 'GrayText' : 'WindowText',\n          },\n        },\n      },\n      getPlaceholderStyles(placeholderStyles),\n      multiline &&\n        !resizable && [\n          classNames.unresizable,\n          {\n            resize: 'none',\n          },\n        ],\n      multiline && {\n        minHeight: 'inherit',\n        lineHeight: 17,\n        flexGrow: 1,\n        paddingTop: 6,\n        paddingBottom: 6,\n        overflow: 'auto',\n        width: '100%',\n      },\n      multiline &&\n        autoAdjustHeight && {\n          overflow: 'hidden',\n        },\n      hasIcon &&\n        !hasRevealButton && {\n          paddingRight: 24,\n        },\n      multiline &&\n        hasIcon && {\n          paddingRight: 40,\n        },\n      disabled && [\n        {\n          backgroundColor: semanticColors.disabledBackground,\n          color: semanticColors.disabledText,\n          borderColor: semanticColors.disabledBackground,\n        },\n        getPlaceholderStyles(disabledPlaceholderStyles),\n      ],\n      underlined && {\n        textAlign: 'left',\n      },\n      focused &&\n        !borderless && {\n          selectors: {\n            [HighContrastSelector]: {\n              paddingLeft: 11,\n              paddingRight: 11,\n            },\n          },\n        },\n      focused &&\n        multiline &&\n        !borderless && {\n          selectors: {\n            [HighContrastSelector]: {\n              paddingTop: 4, // take into consideration the 2px increased border-width (not when borderless).\n            },\n          },\n        },\n      inputClassName,\n    ],\n    icon: [\n      multiline && {\n        paddingRight: 24,\n        alignItems: 'flex-end',\n      },\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        bottom: 6,\n        right: 8,\n        top: 'auto',\n        fontSize: IconFontSizes.medium,\n        lineHeight: 18,\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n    description: [\n      classNames.description,\n      {\n        color: semanticColors.bodySubtext,\n        fontSize: fonts.xSmall.fontSize,\n      },\n    ],\n    errorMessage: [\n      classNames.errorMessage,\n      AnimationClassNames.slideDownIn20,\n      fonts.small,\n      {\n        color: semanticColors.errorText,\n        margin: 0,\n        paddingTop: 5,\n        display: 'flex',\n        alignItems: 'center',\n      },\n    ],\n    prefix: [classNames.prefix, fieldPrefixSuffix],\n    suffix: [classNames.suffix, fieldPrefixSuffix],\n    revealButton: [\n      classNames.revealButton,\n      'ms-Button',\n      'ms-Button--icon',\n      {\n        height: 30,\n        width: 32,\n        border: 'none',\n        padding: '0px 4px',\n        backgroundColor: 'transparent',\n        color: semanticColors.link,\n        selectors: {\n          ':hover': {\n            outline: 0,\n            color: semanticColors.primaryButtonBackgroundHovered,\n            backgroundColor: semanticColors.buttonBackgroundHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n                color: 'Highlight',\n              },\n            },\n          },\n          ':focus': { outline: 0 },\n        },\n      },\n      hasIcon && {\n        marginRight: 28,\n      },\n    ],\n    revealSpan: {\n      display: 'flex',\n      height: '100%',\n      alignItems: 'center',\n    },\n    revealIcon: {\n      margin: '0px 4px',\n      pointerEvents: 'none',\n      bottom: 6,\n      right: 8,\n      top: 'auto',\n      fontSize: IconFontSizes.medium,\n      lineHeight: 18,\n    },\n    subComponentStyles: {\n      label: getLabelStyles(props),\n    },\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { TextFieldBase } from './TextField.base';\nimport { ITextFieldProps, ITextFieldStyles, ITextFieldStyleProps } from './TextField.types';\nimport { getStyles } from './TextField.styles';\nexport { ITextField } from './TextField.types';\n\nexport const TextField: React.FunctionComponent<ITextFieldProps> = styled<\n  ITextFieldProps,\n  ITextFieldStyleProps,\n  ITextFieldStyles\n>(TextFieldBase, getStyles, undefined, {\n  scope: 'TextField',\n});\n","import { IButtonStyles } from '../Button.types';\nimport { ITheme, concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const { palette, semanticColors } = theme;\n    const iconButtonStyles: IButtonStyles = {\n      root: {\n        padding: '0 4px',\n        width: '32px',\n        height: '32px',\n        backgroundColor: 'transparent',\n        border: 'none',\n        color: semanticColors.link,\n      },\n\n      rootHovered: {\n        color: palette.themeDarkAlt,\n        backgroundColor: palette.neutralLighter,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Highlight',\n            color: 'Highlight',\n          },\n        },\n      },\n\n      rootHasMenu: {\n        width: 'auto',\n      },\n\n      rootPressed: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootExpanded: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootChecked: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootCheckedHovered: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralQuaternaryAlt,\n      },\n\n      rootDisabled: {\n        color: palette.neutralTertiaryAlt,\n      },\n    };\n\n    return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles)!;\n  },\n);\n","import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { customizable, nullRender } from '../../../Utilities';\nimport { IButtonProps } from '../Button.types';\nimport { getStyles } from './IconButton.styles';\n\n/**\n * {@docCategory Button}\n */\n@customizable('IconButton', ['theme', 'styles'], true)\nexport class IconButton extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName=\"ms-Button--icon\"\n        styles={getStyles(theme!, styles)}\n        onRenderText={nullRender}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { DelayedRender, classNamesFunction, getNativeProps, htmlElementProperties, css } from '../../Utilities';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles, MessageBarType } from './MessageBar.types';\nimport { useId, useBoolean } from '@fluentui/react-hooks';\n\nconst ICON_MAP = {\n  [MessageBarType.info]: 'Info',\n  [MessageBarType.warning]: 'Info',\n  [MessageBarType.error]: 'ErrorBadge',\n  [MessageBarType.blocked]: 'Blocked2',\n  [MessageBarType.severeWarning]: 'Warning',\n  [MessageBarType.success]: 'Completed',\n};\n\nconst COMPONENT_NAME = 'MessageBar';\n\nconst getClassNames = classNamesFunction<IMessageBarStyleProps, IMessageBarStyles>();\n\nconst getAnnouncementPriority = (messageBarType: MessageBarType): 'assertive' | 'polite' => {\n  switch (messageBarType) {\n    case MessageBarType.blocked:\n    case MessageBarType.error:\n    case MessageBarType.severeWarning:\n      return 'assertive';\n  }\n  return 'polite';\n};\n\nconst getRole = (messageBarType: MessageBarType): 'alert' | 'status' => {\n  switch (messageBarType) {\n    case MessageBarType.blocked:\n    case MessageBarType.error:\n    case MessageBarType.severeWarning:\n      return 'alert';\n  }\n  return 'status';\n};\n\nexport const MessageBarBase: React.FunctionComponent<IMessageBarProps> = React.forwardRef<\n  HTMLDivElement,\n  IMessageBarProps\n>((props, ref) => {\n  const [expandSingleLine, { toggle: toggleExpandSingleLine }] = useBoolean(false);\n  const labelId = useId('MessageBar');\n\n  const {\n    actions,\n    className,\n    children,\n    overflowButtonAriaLabel,\n    dismissIconProps,\n    styles,\n    theme,\n    messageBarType = MessageBarType.info,\n    onDismiss = undefined,\n    isMultiline = true,\n    truncated,\n    dismissButtonAriaLabel,\n    messageBarIconProps,\n    role,\n    delayedRender = true,\n  } = props;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLSpanElement>>(props, htmlElementProperties, [\n    'className',\n    'role',\n  ]);\n\n  const classNames: { [key in keyof IMessageBarStyles]: string } = getClassNames(styles, {\n    theme: theme!,\n    messageBarType: messageBarType || MessageBarType.info,\n    onDismiss: onDismiss !== undefined,\n    actions: actions !== undefined,\n    truncated: truncated,\n    isMultiline: isMultiline,\n    expandSingleLine: expandSingleLine,\n    className,\n  });\n\n  const expandIconProps = { iconName: expandSingleLine ? 'DoubleChevronUp' : 'DoubleChevronDown' };\n  const regionProps = actions || onDismiss ? { 'aria-describedby': labelId, role: 'region' } : {};\n  const actionsDiv = actions ? <div className={classNames.actions}>{actions}</div> : null;\n\n  const dismissButton = onDismiss ? (\n    <IconButton\n      disabled={false}\n      className={classNames.dismissal}\n      onClick={onDismiss}\n      iconProps={dismissIconProps ? dismissIconProps : { iconName: 'Clear' }}\n      title={dismissButtonAriaLabel}\n      ariaLabel={dismissButtonAriaLabel}\n    />\n  ) : null;\n\n  return (\n    <div ref={ref} className={classNames.root} {...regionProps}>\n      <div className={classNames.content}>\n        <div className={classNames.iconContainer} aria-hidden>\n          {messageBarIconProps ? (\n            <Icon {...messageBarIconProps} className={css(classNames.icon, messageBarIconProps.className)} />\n          ) : (\n            <Icon iconName={ICON_MAP[messageBarType!]} className={classNames.icon} />\n          )}\n        </div>\n        <div\n          className={classNames.text}\n          id={labelId}\n          role={role || getRole(messageBarType)}\n          aria-live={getAnnouncementPriority(messageBarType)}\n        >\n          <span className={classNames.innerText} {...nativeProps}>\n            {delayedRender ? (\n              <DelayedRender>\n                <span>{children}</span>\n              </DelayedRender>\n            ) : (\n              // this span is probably not necessary, but preserving it for now in case anyone\n              // has styling that expects it to be present\n              <span>{children}</span>\n            )}\n          </span>\n        </div>\n        {\n          /* singleline expand/collapse button */ !isMultiline && !actionsDiv && truncated && (\n            <div className={classNames.expandSingleLine}>\n              <IconButton\n                disabled={false}\n                className={classNames.expand}\n                onClick={toggleExpandSingleLine}\n                iconProps={expandIconProps}\n                ariaLabel={overflowButtonAriaLabel}\n                aria-expanded={expandSingleLine}\n              />\n            </div>\n          )\n        }\n        {/* singleline actions */ !isMultiline && actionsDiv}\n        {\n          /* singleline dismiss */ !isMultiline && dismissButton && (\n            <div className={classNames.dismissSingleLine}>{dismissButton}</div>\n          )\n        }\n        {/* multiline dismiss */ isMultiline && dismissButton}\n      </div>\n      {/* multiline actions */ isMultiline && actionsDiv}\n    </div>\n  );\n});\nMessageBarBase.displayName = COMPONENT_NAME;\n","import * as React from 'react';\nimport { useConst } from './useConst';\n\n/** Updater callbacks returned by `useBoolean`. */\nexport interface IUseBooleanCallbacks {\n  /** Set the value to true. Always has the same identity. */\n  setTrue: () => void;\n  /** Set the value to false. Always has the same identity. */\n  setFalse: () => void;\n  /** Toggle the value. Always has the same identity. */\n  toggle: () => void;\n}\n\n/**\n * Hook to store a value and generate callbacks for setting the value to true or false.\n * The identity of the callbacks will always stay the same.\n *\n * @param initialState - Initial value\n * @returns Array with the current value and an object containing the updater callbacks.\n */\nexport function useBoolean(initialState: boolean): [boolean, IUseBooleanCallbacks] {\n  const [value, setValue] = React.useState(initialState);\n\n  const setTrue = useConst(() => () => {\n    setValue(true);\n  });\n  const setFalse = useConst(() => () => {\n    setValue(false);\n  });\n  const toggle = useConst(() => () => {\n    setValue(currentValue => !currentValue);\n  });\n\n  return [value, { setTrue, setFalse, toggle }];\n}\n","import * as React from 'react';\nimport { getId } from '@fluentui/utilities/lib/getId';\n\n/**\n * Hook to generate a unique ID in the global scope (spanning across duplicate copies of the same library).\n *\n * @param prefix - Optional prefix for the ID\n * @param providedId - Optional id provided by a parent component. Defaults to the provided value if present,\n *  without conditioning the hook call\n * @returns The ID\n */\nexport function useId(prefix?: string, providedId?: string): string {\n  // getId should only be called once since it updates the global constant for the next ID value.\n  // (While an extra update isn't likely to cause problems in practice, it's better to avoid it.)\n  const ref = React.useRef<string | undefined>(providedId);\n  if (!ref.current) {\n    ref.current = getId(prefix);\n  }\n  return ref.current;\n}\n","import {\n  IStyle,\n  ISemanticColors,\n  HighContrastSelector,\n  ScreenWidthMaxSmall,\n  getScreenSelector,\n  getGlobalClassNames,\n  getFocusStyle,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { IMessageBarStyleProps, IMessageBarStyles, MessageBarType } from './MessageBar.types';\n\nconst GlobalClassNames = {\n  root: 'ms-MessageBar',\n  error: 'ms-MessageBar--error',\n  blocked: 'ms-MessageBar--blocked',\n  severeWarning: 'ms-MessageBar--severeWarning',\n  success: 'ms-MessageBar--success',\n  warning: 'ms-MessageBar--warning',\n  multiline: 'ms-MessageBar-multiline',\n  singleline: 'ms-MessageBar-singleline',\n  dismissalSingleLine: 'ms-MessageBar-dismissalSingleLine',\n  expandingSingleLine: 'ms-MessageBar-expandingSingleLine',\n  content: 'ms-MessageBar-content',\n  iconContainer: 'ms-MessageBar-icon',\n  text: 'ms-MessageBar-text',\n  innerText: 'ms-MessageBar-innerText',\n  dismissSingleLine: 'ms-MessageBar-dismissSingleLine',\n  expandSingleLine: 'ms-MessageBar-expandSingleLine',\n  dismissal: 'ms-MessageBar-dismissal',\n  expand: 'ms-MessageBar-expand',\n  actions: 'ms-MessageBar-actions',\n  actionsSingleline: 'ms-MessageBar-actionsSingleLine',\n};\n\nconst backgroundColor: { [key: string]: keyof ISemanticColors } = {\n  [MessageBarType.error]: 'errorBackground',\n  [MessageBarType.blocked]: 'errorBackground',\n  [MessageBarType.success]: 'successBackground',\n  [MessageBarType.warning]: 'warningBackground',\n  [MessageBarType.severeWarning]: 'severeWarningBackground',\n  [MessageBarType.info]: 'infoBackground',\n};\n\nconst highContrastBackgroundColor: { [key: string]: string } = {\n  [MessageBarType.error]: 'rgba(255, 0, 0, 0.3)',\n  [MessageBarType.blocked]: 'rgba(255, 0, 0, 0.3)',\n  [MessageBarType.success]: 'rgba(48, 241, 73, 0.3)',\n  [MessageBarType.warning]: 'rgba(255, 254, 57, 0.3)',\n  [MessageBarType.severeWarning]: 'rgba(255, 0, 0, 0.3)',\n  [MessageBarType.info]: 'Window',\n};\n\nconst iconColor: { [key: string]: keyof ISemanticColors } = {\n  [MessageBarType.error]: 'errorIcon',\n  [MessageBarType.blocked]: 'errorIcon',\n  [MessageBarType.success]: 'successIcon',\n  [MessageBarType.warning]: 'warningIcon',\n  [MessageBarType.severeWarning]: 'severeWarningIcon',\n  [MessageBarType.info]: 'infoIcon',\n};\n\nexport const getStyles = (props: IMessageBarStyleProps): IMessageBarStyles => {\n  const {\n    theme,\n    className,\n    onDismiss,\n    truncated,\n    isMultiline,\n    expandSingleLine,\n    messageBarType = MessageBarType.info,\n  } = props;\n  const { semanticColors, fonts } = theme;\n\n  const SmallScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const dismissalAndExpandIconStyle: IStyle = {\n    fontSize: IconFontSizes.xSmall,\n    height: 10,\n    lineHeight: '10px',\n    color: semanticColors.messageText,\n    selectors: {\n      [HighContrastSelector]: {\n        ...getHighContrastNoAdjustStyle(),\n        color: 'WindowText',\n      },\n    },\n  };\n\n  const dismissalAndExpandStyle: IStyle = [\n    getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: {\n        outlineOffset: '-6px',\n        outline: '1px solid Highlight',\n      },\n      borderColor: 'transparent',\n    }),\n    {\n      flexShrink: 0,\n      width: 32,\n      height: 32,\n      padding: '8px 12px',\n      selectors: {\n        '& .ms-Button-icon': dismissalAndExpandIconStyle,\n        ':hover': {\n          backgroundColor: 'transparent',\n        },\n        ':active': {\n          backgroundColor: 'transparent',\n        },\n      },\n    },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      messageBarType === MessageBarType.error && classNames.error,\n      messageBarType === MessageBarType.blocked && classNames.blocked,\n      messageBarType === MessageBarType.severeWarning && classNames.severeWarning,\n      messageBarType === MessageBarType.success && classNames.success,\n      messageBarType === MessageBarType.warning && classNames.warning,\n      isMultiline ? classNames.multiline : classNames.singleline,\n      !isMultiline && onDismiss && classNames.dismissalSingleLine,\n      !isMultiline && truncated && classNames.expandingSingleLine,\n      {\n        background: semanticColors[backgroundColor[messageBarType]],\n        color: semanticColors.messageText,\n        minHeight: 32,\n        width: '100%',\n        display: 'flex',\n        wordBreak: 'break-word',\n        selectors: {\n          '.ms-Link': {\n            color: semanticColors.messageLink,\n            selectors: {\n              ':hover': {\n                color: semanticColors.messageLinkHovered,\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n            background: highContrastBackgroundColor[messageBarType],\n            border: '1px solid WindowText',\n            color: 'WindowText',\n          },\n        },\n      },\n      isMultiline && {\n        flexDirection: 'column',\n      },\n      className,\n    ],\n    content: [\n      classNames.content,\n      {\n        display: 'flex',\n        width: '100%',\n        lineHeight: 'normal',\n      },\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        fontSize: IconFontSizes.medium,\n        minWidth: 16,\n        minHeight: 16,\n        display: 'flex',\n        flexShrink: 0,\n        margin: '8px 0 8px 12px',\n      },\n    ],\n    icon: {\n      color: semanticColors[iconColor[messageBarType]],\n      selectors: {\n        [HighContrastSelector]: {\n          ...getHighContrastNoAdjustStyle(),\n          color: 'WindowText',\n        },\n      },\n    },\n    text: [\n      classNames.text,\n      {\n        minWidth: 0,\n        display: 'flex',\n        flexGrow: 1,\n        margin: 8,\n        ...fonts.small,\n        selectors: {\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      !onDismiss && {\n        marginRight: 12,\n      },\n    ],\n    innerText: [\n      classNames.innerText,\n      {\n        lineHeight: 16,\n        selectors: {\n          '& span a': {\n            paddingLeft: 4,\n          },\n        },\n      },\n      truncated && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap',\n      },\n      !isMultiline && {\n        // In high contrast this causes the top and bottom of links' focus outline to be clipped\n        // (not sure of a good way around that while still maintaining text clipping)\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      },\n      !isMultiline &&\n        !truncated && {\n          selectors: {\n            [SmallScreenSelector]: {\n              overflow: 'visible',\n              whiteSpace: 'pre-wrap',\n            },\n          },\n        },\n      expandSingleLine && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap',\n      },\n    ],\n    dismissSingleLine: classNames.dismissSingleLine,\n    expandSingleLine: classNames.expandSingleLine,\n    dismissal: [classNames.dismissal, dismissalAndExpandStyle],\n    expand: [classNames.expand, dismissalAndExpandStyle],\n    actions: [\n      isMultiline ? classNames.actions : classNames.actionsSingleline,\n      {\n        display: 'flex',\n        flexGrow: 0,\n        flexShrink: 0,\n        flexBasis: 'auto',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        margin: '0 12px 0 8px',\n        selectors: {\n          '& button:nth-child(n+2)': {\n            marginLeft: 8,\n          },\n        },\n      },\n      isMultiline && {\n        marginBottom: 8,\n      },\n      onDismiss &&\n        !isMultiline && {\n          marginRight: 0,\n        },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { MessageBarBase } from './MessageBar.base';\nimport { getStyles } from './MessageBar.styles';\nimport { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nexport const MessageBar: React.FunctionComponent<IMessageBarProps> = styled<\n  IMessageBarProps,\n  IMessageBarStyleProps,\n  IMessageBarStyles\n>(MessageBarBase, getStyles, undefined, {\n  scope: 'MessageBar',\n});\n"],"sourceRoot":""}